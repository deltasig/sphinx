@using Dsp.Data.Entities;
@using static Dsp.Data.Entities.Position;
@model Dsp.Data.Entities.Position
@{
    Layout = "~/Views/Shared/_LayoutInternal.cshtml";
    ViewBag.Title = "Create New Position";
}

<div class="container-fluid">
    <div class="row">
        <div class="col">
            <p>
                <a href="@Url.Action("Index")" class="btn btn-sm btn-default">
                    <i class="fa fa-caret-left"></i> Back to Positions
                </a>
            </p>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            @using (Html.BeginForm("Create", "Positions", FormMethod.Post, new { @class = "", role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new {@class = "control-label"})
                    @Html.EditorFor(model => model.Description, new {htmlAttributes = new {@class = "form-control", autocomplete = "off"}})
                    @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(model => model.Inquiries, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Inquiries, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.Inquiries, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(m => m.Type, Html.GetEnumSelectList(typeof(PositionType)), htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DisplayOrder, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.DisplayOrder, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })
                </div>

                <div class="checkbox form-group">
                    <label class="control-label">
                        @Html.EditorFor(model => model.IsExecutive)
                        E-Board
                    </label>
                </div>

                <div class="checkbox form-group">
                    <label class="control-label">
                        @Html.EditorFor(model => model.IsElected)
                        Elected
                    </label>
                </div>

                <div class="checkbox form-group">
                    <label class="control-label">
                        @Html.EditorFor(model => model.IsDisabled)
                        Disabled
                    </label>
                </div>

                <div class="checkbox form-group">
                    <label class="control-label">
                        @Html.EditorFor(model => model.IsPublic)
                        Public
                    </label>
                </div>
                <br />
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            }
        </div>
    </div>
</div>
