@model ScholarshipSubmission
@{
    ViewBag.Title = "Scholarship Submission";
    ViewBag.Subtitle = Model.Application.Title;
    ViewBag.Print = true;
    var cstZone = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");
    var hasElevatedPermissions = User.IsInRole("Administrator") || User.IsInRole("Vice President Growth") || User.IsInRole("Director of Recruitment");
}
@if (hasElevatedPermissions)
{
    @section styles {
        @*@Styles.Render("~/content/markdown")*@
    }
}
    
<div class="container-fluid">
    <div class="row no-print">
        <div class="col-lg-8">
            <p>
                <a href="@Url.Action("Details", new {id = Model.ScholarshipAppId})"
                   class="btn btn-sm btn-default">
                    <i class="fa fa-caret-left"></i> Back to Submissions
                </a>
            </p>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-8">
            <h2 style="margin-top: 0">
                <strong>@Model.FirstName @Model.LastName</strong>
            </h2>
            <hr />
            <h3>General Information</h3>
            <dl class="dl-horizontal row-space" style="page-break-after: always;">
                @if (hasElevatedPermissions)
                {
                    <dt>Student Number</dt>
                    <dd>@Model.StudentNumber</dd>
                }
                <dt>Email</dt>
                <dd>@Model.Email</dd>
                <dt>Phone</dt>
                <dd>@Model.PhoneNumber</dd>
                <dt>Address</dt>
                <dd>
                    @Model.Address1
                    @if (!string.IsNullOrEmpty(Model.Address2))
                    {
                        @:, @Model.Address2
                            }
                    , @Model.City, @Model.State, @Model.PostalCode, @Model.Country
                </dd>
                <dt>High School</dt>
                <dd>
                    @Model.HighSchool
                    @if (hasElevatedPermissions)
                    {
                        <small class="no-print">(GPA: @Model.Gpa, ACT / SAT: @Model.ActSatScore)</small>
                        <small class="hide print">(Academic performance info redacted)</small>
                    }
                    else
                    {
                        <small>(Academic performance info redacted)</small>
                    }
                </dd>
                <dt>How They Heard</dt>
                <dd>
                    @Model.HearAboutScholarship
                </dd>
            </dl>

            <h3>Short Answer Questions</h3>
            @foreach (var a in Model.Answers)
            {
                <div class="form-group" style="page-break-inside: avoid;">
                    <strong>@a.Question.Prompt</strong>
                    <blockquote>
                        @Html.Raw(a.AnswerText)
                    </blockquote>
                </div>
            }
        </div>
    </div>
    <div class="row no-print">
        <div class="col-lg-8">
            @if (Model.IsWinner)
            {
                <div class="alert alert-success">
                    <i class="fa fa-lg fa-star"></i> Scholarship Winner
                </div>
            }
            <h2>
                Committee Response
                @if (Model.CommitteeRespondedOn != null)
                {
                    <small>
                        Last Updated:
                        @TimeZoneInfo.ConvertTimeFromUtc((DateTime)Model.CommitteeRespondedOn, cstZone).ToString("MM-dd-yyyy")
                    </small>
                }
            </h2>
            @if (hasElevatedPermissions)
            {
                using (Html.BeginForm("EditSubmission", "Applications", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => Model.ScholarshipSubmissionId)
                    @Html.HiddenFor(m => Model.ScholarshipAppId)
                    @Html.HiddenFor(m => Model.FirstName)
                    @Html.HiddenFor(m => Model.LastName)
                    @Html.HiddenFor(m => Model.StudentNumber)
                    @Html.HiddenFor(m => Model.PhoneNumber)
                    @Html.HiddenFor(m => Model.Email)
                    @Html.HiddenFor(m => Model.Address1)
                    @Html.HiddenFor(m => Model.Address2)
                    @Html.HiddenFor(m => Model.City)
                    @Html.HiddenFor(m => Model.State)
                    @Html.HiddenFor(m => Model.PostalCode)
                    @Html.HiddenFor(m => Model.Country)
                    @Html.HiddenFor(m => Model.HighSchool)
                    @Html.HiddenFor(m => Model.ActSatScore)
                    @Html.HiddenFor(m => Model.Gpa)
                    @Html.HiddenFor(m => Model.HearAboutScholarship)
                    @Html.HiddenFor(m => Model.SubmittedOn)

                    <div class="form-group">
                        <div class="wmd-panel">
                            <div id="wmd-button-bar"></div>
                            @Html.EditorFor(model => model.CommitteeResponse, new { htmlAttributes = new { @class = "form-control wmd-input", rows = 10, id = "wmd-input" } })
                        </div>
                        <div class="wmd-panel wmd-preview well well-sm" id="wmd-preview"></div>
                        @Html.ValidationMessageFor(model => model.CommitteeResponse, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label class="control-label">Scholarship Winner</label>
                        @Html.EditorFor(model => model.IsWinner, new { htmlAttributes = new { @class = "" } })
                        @Html.ValidationMessageFor(model => model.IsWinner, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <input type="submit" value="Submit" class="btn btn-default" />
                    </div>
                }
            }
            else
            {
                <div class="well">
                    @Html.Raw(ViewBag.CommitteeResponse)
                </div>
            }
        </div>
    </div>
</div>
@if (hasElevatedPermissions)
{
    @section scripts {
        @*@Scripts.Render("~/bundles/markdown")*@
        <script type="text/javascript">

            $(function () {
                var converter = Markdown.getSanitizingConverter();
                var editor = new Markdown.Editor(converter);
                editor.run();
            });

        </script>
    }
}