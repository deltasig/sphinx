@model LoginModel
@{
    Layout = "~/Views/Shared/_LayoutExternal.cshtml";
    ViewBag.Title = "Member Authentication";
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes().ToList();
}

<div class="container-fluid">
    <div class="row">
        <div class="col-sm-6 col-sm-offset-3 col-md-4 col-md-offset-4">
            <div class="clearfix" style="margin-top: 100px">
                <img class="img-responsive pull-left" src="~/Images/MobileTouch-57x57.png" alt="DSP" width="35" style="margin-right:10px">
                <h4>
                    @ViewBag.Title
                    <small class="pull-right" data-toggle="tooltip" data-placement="top" 
                           title="Forgot password, locked out, etc.">
                        <a href="@Url.Action("Contacts", "Home", new { area = "" })#web_master" 
                           class="social">
                            <i class="fa fa-question-circle"></i> Help
                        </a>
                    </small>
                </h4>
            </div>
            <hr/>
            @using (Html.BeginForm("SignIn", "Account", FormMethod.Post, new {role = "form"}))
            {
                Model.ReturnUrl = Request.QueryString["returnUrl"];
                @Html.HiddenFor(m => m.ReturnUrl)
                @Html.AntiForgeryToken()

                <div class="form-group">
                    @Html.TextBoxFor(m => m.UserName, new {@class = "form-control", placeholder = "User Name", autofocus = "", type = "text"})
                    @Html.ValidationMessageFor(m => m.UserName, null, new {@class = "text-danger"})
                </div>
                <div class="form-group">
                    @Html.PasswordFor(m => m.Password, new {@class = "form-control", placeholder = "Password"})
                    @Html.ValidationMessageFor(m => m.Password, null, new {@class = "text-danger"})
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-md btn-default">Sign In</button>
                    <div class="checkbox pull-right">
                        <label>
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe, new {style = "padding:0"})
                        </label>
                    </div>
                </div>
            }

            @if (loginProviders.Any())
            {
                <p style="margin: 10px 0">Or use</p>
                <div class="form-group">
                    @using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl }, FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        foreach (var p in loginProviders)
                        {
                            if (p.AuthenticationType == "Google")
                            {
                                <button type="submit" class="btn btn-sm btn-danger" id="@p.AuthenticationType"
                                        name="provider" value="@p.AuthenticationType"
                                        title="Sign in using your @p.Caption account">
                                    <i class="fa fa-google-plus"></i>
                                    @p.AuthenticationType
                                </button>
                            }
                        }
                    }
                </div>
            }
            <hr/>
            <p class="text-danger">
                @ViewBag.FailMessage
            </p>
        </div>
    </div>
</div>
