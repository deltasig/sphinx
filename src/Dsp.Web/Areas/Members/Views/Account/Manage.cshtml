@model AccountManagementModel
@{
    ViewBag.Title = "Account Management";
    ViewBag.Subtitle = Model.Member.ToString();
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes().ToList();
    var hasElevatedPermissions = User.IsInRole("Administrator") || User.IsInRole("Secretary");
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-4 col-lg-2">
            @Html.Partial("~/Areas/Members/Views/Shared/_AccountNavPartial.cshtml")
        </div>
        <div class="col-md-8 col-lg-5">
            @if (loginProviders.Any())
            {
                <div class="panel panel-default">
                    <div class="panel-heading">External Login Providers</div>
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <tbody>
                            @foreach (var p in loginProviders)
                            {
                                var loginAlreadyLinked = Model.CurrentLogins.Select(l => l.LoginProvider).Contains(p.AuthenticationType);

                                <tr class="@(loginAlreadyLinked ? "success" : "")">
                                    <td>
                                        @if (p.AuthenticationType == "Google")
                                        {
                                            <i class="fa fa-google-plus"></i>
                                            @p.AuthenticationType
                                        }
                                        else
                                        {
                                            @p.AuthenticationType
                                        }
                                    </td>
                                    <td class="text-right">
                                        @if (!loginAlreadyLinked)
                                        {
                                            using (Html.BeginForm("LinkLogin", "Account"))
                                            {
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="btn btn-default btn-xs" id="@p.AuthenticationType"
                                                        name="provider" value="@p.AuthenticationType"
                                                        title="Link your @p.Caption account">
                                                    Link!
                                                </button>
                                            }
                                        }
                                        else
                                        {
                                            var provider = Model.CurrentLogins
                                                .Single(l => l.LoginProvider == p.AuthenticationType);

                                            using (Html.BeginForm("RemoveLogin", "Account"))
                                            {
                                                @Html.AntiForgeryToken()
                                                <div>
                                                    @Html.Hidden("loginProvider", provider.LoginProvider)
                                                    @Html.Hidden("providerKey", provider.ProviderKey)
                                                    <input type="submit" class="btn btn-danger btn-xs" value="Remove"
                                                           title="Remove this @provider.LoginProvider login from your account"/>
                                                </div>
                                            }
                                        }
                                    </td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
            @if (User.Identity.Name == Model.Member.UserName)
            {
                <div class="panel panel-default">
                    <div class="panel-heading">Change Password</div>
                    <div class="panel-body">
                        @using (Html.BeginForm("ChangePassword", "Account", null, FormMethod.Post, new {role = "form"}))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group">
                                @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control", placeholder = "Old Password" })
                                @Html.ValidationMessageFor(m => m.OldPassword, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", placeholder = "New Password" })
                                @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm Password" })
                                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                            <button type="submit" class="btn btn-default">Submit</button>
                        }
                    </div>
                </div>
            }
        </div>
        <div class="col-md-8 col-md-offset-4 col-lg-5 col-lg-offset-0">
            @if (hasElevatedPermissions)
            {
                <div class="panel panel-default">
                    <div class="panel-heading">
                        Admin Functions
                    </div>
                    <div class="panel-body">
                        @Html.ActionLink("Resend Confirmation Email", "ResendConfirmationEmail", "Account", new
                            {
                                id = Model.Member.Id
                            }, new { @class = "btn btn-sm btn-danger" })
                    </div>
                </div>
            }
        </div>
    </div>
</div>
