@using Dsp.Web.Extensions
@using Microsoft.AspNet.Identity
@model Dsp.Web.Areas.Members.Models.EditMemberInfoModel
@{
    Layout = "~/Views/Shared/_LayoutInternal.cshtml";
    ViewBag.Title = "Editing " + Model.Member;
    var isAdmin = User.IsInRole("Administrator");
    var isSecretary = User.IsInRole("Secretary");
    var isCurrentUser = User.Identity.GetUserId<int>() == Model.Member.Id;
}

<div class="container-fluid">
    <div class="row">
        <div class="col-xs-12">
            <p>
                <a href="@Url.Action("Index", "Account", new {userName = Model.Member.UserName, area = "Members"})" class="btn btn-sm btn-default">
                    <i class="fa fa-caret-left"></i> Back to Member Profile
                </a>
                <a href="@Url.Action("Index", "Roster", new {area = "Members"})" class="btn btn-sm btn-default">
                    <i class="fa fa-caret-left"></i> Back to Roster
                </a>
            </p>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <div class="media">
                <div class="media-left">
                    <img src="~/Images/Avatars/@(Model.Member.AvatarPath)" height="90" width="90" 
                         onError="this.onerror = null; this.src = '/Images/NoAvatar.jpg';" />
                </div>
                <div class="media-body">
                    @if (isAdmin || isCurrentUser)
                    {
                        <h4 class="media-heading">Upload new avatar</h4>

                        using (Html.BeginForm("Avatar", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.HiddenFor(m => m.Member.Id)

                            <div class="form-group">
                                <input type="file" name="avatar" />
                            </div>
                            <div class="form-group">
                                <input type="submit" value="Upload" class="btn btn-sm btn-default" />
                            </div>
                        }
                    }
                </div>
            </div>
            
            <h4>Information</h4>
            @using (Html.BeginForm("Edit", "Account", FormMethod.Post, new {@class = "", role = "form"}))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                @Html.HiddenFor(m => m.Member.Id)
                @Html.HiddenFor(m => m.Member.UserName)

                if (isAdmin)
                {
                    <div class="form-group">
                        @Html.LabelFor(m => m.Member.FirstName, new {@class = "control-label"})
                        @Html.EditorFor(m => m.Member.FirstName, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(m => m.Member.FirstName, "", new {@class = "text-danger"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Member.LastName, new {@class = "control-label"})
                        @Html.EditorFor(m => m.Member.LastName, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(m => m.Member.LastName, "", new {@class = "text-danger"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Member.Email, new {@class = "control-label"})
                        @Html.EditorFor(m => m.Member.Email, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(m => m.Member.Email, "", new {@class = "text-danger"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Member.ExpectedGraduationId, new {@class = "control-label"})
                        @Html.DropDownListFor(m => m.Member.ExpectedGraduationId, Model.Semesters,
                            new {@class = "form-control selectpicker", autocomplete = "off", data_live_search = "true"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Member.Pin, new {@class = "control-label"})
                        @Html.EditorFor(m => m.Member.Pin, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(m => m.Member.Pin, "", new {@class = "text-danger"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Member.StatusId, new {@class = "control-label"})
                        @Html.DropDownListFor(m => m.Member.StatusId, Model.Statuses, new {@class = "form-control selectpicker"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Member.PledgeClassId, new {@class = "control-label"})
                        @Html.DropDownListFor(m => m.Member.PledgeClassId, Model.PledgeClasses,
                            new {@class = "form-control selectpicker", autocomplete = "off", data_live_search = "true"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Member.BigBroId, new {@class = "control-label"})
                        @Html.DropDownListFor(m => m.Member.BigBroId, Model.Members,
                            new {@class = "form-control selectpicker", autocomplete = "off", data_live_search = "true"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Member.ShirtSize, new {@class = "control-label"})
                        @Html.DropDownListFor(m => m.Member.ShirtSize, Model.ShirtSizes, new {@class = "form-control selectpicker"})
                    </div>
                }
                else if (isSecretary)
                {
                    <div class="form-group">
                        @Html.LabelFor(m => m.Member.FirstName, new {@class = "control-label"})
                        @Html.EditorFor(m => m.Member.FirstName, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(m => m.Member.FirstName, "", new {@class = "text-danger"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Member.LastName, new {@class = "control-label"})
                        @Html.EditorFor(m => m.Member.LastName, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(m => m.Member.LastName, "", new {@class = "text-danger"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Member.Email, new {@class = "control-label"})
                        @Html.EditorFor(m => m.Member.Email, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(m => m.Member.Email, "", new {@class = "text-danger"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Member.ExpectedGraduationId, new {@class = "control-label"})
                        @Html.DropDownListFor(m => m.Member.ExpectedGraduationId, Model.Semesters,
                            new {@class = "form-control selectpicker", autocomplete = "off", data_live_search = "true"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Member.Pin, new {@class = "control-label"})
                        @Html.EditorFor(m => m.Member.Pin, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(m => m.Member.Pin, "", new {@class = "text-danger"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Member.StatusId, new {@class = "control-label"})
                        @Html.DropDownListFor(m => m.Member.StatusId, Model.Statuses, new {@class = "form-control selectpicker"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Member.PledgeClassId, new {@class = "control-label"})
                        @Html.DropDownListFor(m => m.Member.PledgeClassId, Model.PledgeClasses,
                            new {@class = "form-control selectpicker", autocomplete = "off", data_live_search = "true"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Member.BigBroId, new {@class = "control-label"})
                        @Html.DropDownListFor(m => m.Member.BigBroId, Model.Members,
                            new {@class = "form-control selectpicker", autocomplete = "off", data_live_search = "true"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Member.ShirtSize, new {@class = "control-label"})
                        @Html.DropDownListFor(m => m.Member.ShirtSize, Model.ShirtSizes, new {@class = "form-control selectpicker"})
                    </div>
                }
                else if (isCurrentUser)
                {
                    <div class="form-group">
                        @Html.LabelFor(m => m.Member.FirstName, new {@class = "control-label"})
                        @Html.EditorFor(m => m.Member.FirstName, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(m => m.Member.FirstName, "", new {@class = "text-danger"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Member.LastName, new {@class = "control-label"})
                        @Html.EditorFor(m => m.Member.LastName, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(m => m.Member.LastName, "", new {@class = "text-danger"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Member.Email, new {@class = "control-label"})
                        @Html.EditorFor(m => m.Member.Email, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(m => m.Member.Email, "", new {@class = "text-danger"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Member.ExpectedGraduationId, new {@class = "control-label"})
                        @Html.DropDownListFor(m => m.Member.ExpectedGraduationId, Model.Semesters,
                            new {@class = "form-control selectpicker", autocomplete = "off", data_live_search = "true"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Member.Pin, new {@class = "control-label"})
                        @Html.EditorFor(m => m.Member.Pin, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(m => m.Member.Pin, "", new {@class = "text-danger"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Member.BigBroId, new {@class = "control-label"})
                        @Html.DropDownListFor(m => m.Member.BigBroId, Model.Members,
                            new {@class = "form-control selectpicker", autocomplete = "off", data_live_search = "true"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Member.ShirtSize, new {@class = "control-label"})
                        @Html.DropDownListFor(m => m.Member.ShirtSize, Model.ShirtSizes, new {@class = "form-control selectpicker"})
                    </div>
                    @Html.HiddenFor(m => m.Member.StatusId)
                    @Html.HiddenFor(m => m.Member.PledgeClassId)
                }
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-default"/>
                </div>
            }
        </div>
    </div>
</div>
