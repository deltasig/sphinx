@model BugsEditModel
@{
    ViewBag.Title = "Edit Bug Report";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-3">
            <p>
                <a href="@Url.Action("Details", new { id = Model.BugReport.Id })" class="btn btn-sm btn-default">
                    <i class="fa fa-caret-left"></i> Back
                </a>
            </p>
        </div>
        <div class="col-md-3 text-right">

        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.BugReport.Id)
                @Html.HiddenFor(model => model.BugReport.UserId)

                if (Model.IsCurrentUser)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.BugReport.UrlWithProblem, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.BugReport.UrlWithProblem, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BugReport.UrlWithProblem, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BugReport.Description, htmlAttributes: new { @class = "control-label" })
                        @Html.TextAreaFor(model => model.BugReport.Description, new { @class = "form-control", rows = 10 })
                        @Html.ValidationMessageFor(model => model.BugReport.Description, "", new { @class = "text-danger" })
                    </div>
                }
                else
                {
                    @Html.HiddenFor(model => model.BugReport.UrlWithProblem)
                    @Html.HiddenFor(model => model.BugReport.Description)
                    <div class="form-group">
                        @Html.LabelFor(model => model.BugReport.UrlWithProblem, htmlAttributes: new { @class = "control-label" })
                        @Html.DisplayFor(model => model.BugReport.UrlWithProblem, new { htmlAttributes = new { @class = "form-control" } })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BugReport.Description, htmlAttributes: new { @class = "control-label" })
                        @Html.DisplayFor(model => model.BugReport.Description, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                }

                if (Model.IsAdmin)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.BugReport.Response, htmlAttributes: new { @class = "control-label" })
                        @Html.TextAreaFor(model => model.BugReport.Response, new { @class = "form-control", rows = 10 })
                        @Html.ValidationMessageFor(model => model.BugReport.Response, "", new { @class = "text-danger" })
                    </div>
                    <div class="checkbox form-group">
                        <label class="control-label">
                            @Html.EditorFor(model => model.BugReport.IsFixed)
                            Mark as Fixed
                        </label>
                    </div>
                }

                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            }
        </div>
        <div class="col-sm-6">

        </div>
    </div>
</div>
