@using Dsp.Web.Areas.Members.Models
@model RosterIndexModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Roster";
    ViewBag.Subtitle = Model.Semester.ToString();

    var pledgeCount = Model.Members.Count(m => m.PledgeClass.SemesterId == Model.SelectedSemester);
    var activeCount = Model.Members.Count(m => m.PledgeClass.SemesterId != Model.SelectedSemester);

    var filter = new RosterFilterModel
    {
        sem = Model.SelectedSemester,
        sort = ViewBag.Sort,
        order = ViewBag.Order,
        s = ViewBag.SearchTerm
    };

    var sortLastNameFilter = new RosterFilterModel(filter);
    var sortFirstNameFilter = new RosterFilterModel(filter);
    var sortPledgeClassFilter = new RosterFilterModel(filter);
    var sortLastSemesterFilter = new RosterFilterModel(filter);
    var sortLocationFilter = new RosterFilterModel(filter);
    var changeOrderFilter = new RosterFilterModel(filter);
    var clearSearchTermFilter = new RosterFilterModel(filter);

    const string lastNameSortText = "last-name";
    const string firstNameSortText = "first-name";
    const string pledgeClassSortText = "pledge-class";
    const string lastSemesterSortText = "final-semester";
    const string locationSortText = "location";

    sortLastNameFilter.sort = filter.sort == lastNameSortText ? "" : lastNameSortText;
    sortFirstNameFilter.sort = filter.sort == firstNameSortText ? "" : firstNameSortText;
    sortPledgeClassFilter.sort = filter.sort == pledgeClassSortText ? "" : pledgeClassSortText;
    sortLastSemesterFilter.sort = filter.sort == lastSemesterSortText ? "" : lastSemesterSortText;
    sortLocationFilter.sort = filter.sort == locationSortText ? "" : locationSortText;
    changeOrderFilter.order = filter.order == "asc" ? filter.order = "desc" : filter.order = "asc";
    clearSearchTermFilter.s = string.Empty;
}

<div class="container-fluid">
    <div class="row row-space">
        <div class="col-md-10 col-lg-8">
            @using (Html.BeginForm("Index", "Roster", new { area = "Members" }, FormMethod.Get, new { @class = "form-inline", style="display:inline" }))
            {
                <div class="form-group">
                    <input id="sort" name="sort" type="hidden" value="@ViewBag.Sort">
                    <input id="order" name="order" type="hidden" value="@ViewBag.Order">
                    <input id="s" name="s" type="hidden" value="@ViewBag.SearchTerm">

                    @Html.DropDownList("sem", Model.Semesters, new
                    {
                        @class = "selectpicker",
                        autocomplete = "off",
                        id = "semester-dd",
                        data_live_search = "true",
                        data_width = "125px",
                        onchange = "this.form.submit()"
                    })
                </div>
            }
            <div class="btn-group" type="group">
                <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-expanded="true">
                    Sorted by <small>@ViewBag.Sort</small> <span class="caret"></span>
                </button>
                <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu1">
                    <li role="presentation" class="@(ViewBag.Sort == lastNameSortText ? "active" : "")">
                        <a role="menuitem" tabindex="-1" href="@Url.Action("Index", sortLastNameFilter)">Last name</a>
                    </li>
                    <li role="presentation" class="@(ViewBag.Sort == firstNameSortText ? "active" : "")">
                        <a role="menuitem" tabindex="-1" href="@Url.Action("Index", sortFirstNameFilter)">First name</a>
                    </li>
                    <li role="presentation" class="@(ViewBag.Sort == pledgeClassSortText ? "active" : "")">
                        <a role="menuitem" tabindex="-1" href="@Url.Action("Index", sortPledgeClassFilter)">Pledge Class</a>
                    </li>
                    <li role="presentation" class="@(ViewBag.Sort == lastSemesterSortText ? "active" : "")">
                        <a role="menuitem" tabindex="-1" href="@Url.Action("Index", sortLastSemesterFilter)">Final Semester</a>
                    </li>
                    <li role="presentation" class="@(ViewBag.Sort == locationSortText ? "active" : "")">
                        <a role="menuitem" tabindex="-1" href="@Url.Action("Index", sortLocationFilter)">Location</a>
                    </li>
                </ul>
            </div>
            <a class="btn btn-default @(ViewBag.Order == "desc" ? " active" : "")"
               href="@Url.Action("Index", "Roster", changeOrderFilter)"
               data-toggle="tooltip" data-placement="top" title="Reverse sort order">
                <i class="fa fa-sort-alpha-desc"></i>
            </a>
            <br class="visible-sm visible-xs" />
            @using (Html.BeginForm("Index", "Roster", new { area = "Members" }, FormMethod.Get, new { @class = "form-inline", style="display:inline; margin-left:1px" }))
            {
                <div class="input-group">
                    <span class="input-group-addon" id="search-addon" data-toggle="tooltip" data-placement="top"
                          title="Search by name, pledge class, final semester, or location.">
                        <i class="fa fa-search"></i>
                    </span>
                    <input id="sem" name="sem" type="hidden" value="@Model.SelectedSemester">
                    <input id="sort" name="sort" type="hidden" value="@ViewBag.Sort">
                    <input id="order" name="order" type="hidden" value="@ViewBag.Order">
                    <input class="form-control" id="s" name="s" placeholder="Search" type="text" 
                            value="" aria-describedby="search-addon">

                    @if (!string.IsNullOrEmpty(ViewBag.SearchTerm))
                    {
                        <span class="input-group-btn">
                            <a class="btn btn-default" data-toggle="tooltip" data-placement="top" title="Clear search"
                                href="@Url.Action("Index", clearSearchTermFilter)">
                                <i class="fa fa-times-circle"></i>
                            </a>
                        </span>
                    }
                </div>
                if (!string.IsNullOrEmpty(ViewBag.SearchTerm))
                {
                    <small>Searched for: @ViewBag.SearchTerm</small>
                }
            }
            <br class="visible-sm visible-xs" />
            <a class="btn btn-info pull-right" href="@Url.Action("Index", "PhoneNumbers")"
               data-toggle="tooltip" data-placement="top" title="Phone Numbers">
                <i class="fa fa-fw fa-phone"></i>
            </a>
            <a class="btn btn-info pull-right" href="@Url.Action("Index", "Addresses")"
               data-toggle="tooltip" data-placement="top" title="Addresses" style="margin-right:5px;">
                <i class="fa fa-fw fa-envelope"></i>
            </a>
        </div>
    </div>
    <div class="row">
        <div class="col-md-10 col-lg-8">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <div class="row">
                        <div class="col-sm-6">
                            <span class="badge">Total: @Model.Members.Count()</span>
                            <div class="label label-default"
                                 data-toggle="tooltip"
                                 date-placement="top"
                                 title="Actives + Neophyte(s)">@activeCount
                            </div>|<div class="label label-default"
                                 data-toggle="tooltip"
                                 data-placement="top"
                                 title="Pledges">@pledgeCount</div>
                        </div>
                        <div class="col-sm-6 text-sm-right">
                            <a class="btn btn-xs btn-default" href="@Url.Action("Download", "Roster", new {area = "Members"})">
                                <i class="fa fa-download fa-lg"></i> Download Roster
                            </a>
                            @if (User.IsInRole("Secretary") || User.IsInRole("Administrator"))
                            {
                                <a class="btn btn-xs btn-default" href="@Url.Action("InitiatePledges", "Roster", new {area = "Members"})">
                                    Initiate Pledges
                                </a>
                                <a class="btn btn-xs btn-default" href="@Url.Action("GraduateActives", "Roster", new {area = "Members"})">
                                    Graduate Actives
                                </a>
                            }
                        </div>
                    </div>
                </div>
                <div class="list-group">
                    @foreach (var m in Model.Members)
                    {
                        var phone = m.PhoneNumbers.Single(p => p.Type == "Mobile") ?? new Dsp.Data.Entities.PhoneNumber();

                        <a href="@Url.Action("Index", "Account", new {userName = m.UserName, area = "Members"})" class="list-group-item">
                            <h4 class="list-group-item-heading">
                                @m.ToString()
                                <small class="pull-right">
                                    <span class="label label-success">@m.MemberStatus.StatusName</span>
                                </small>
                                <small class="pull-right" style="margin-right:5px">
                                    <span class="label label-default">@m.PledgeClass.PledgeClassName</span>
                                </small>
                            </h4>
                            <div class="row">
                                <div class="col-md-3 col-sm-6">
                                    <i class="fa fa-fw fa-envelope"></i> @m.Email
                                </div>
                                <div class="col-md-3 col-sm-6">
                                    <i class="fa fa-fw fa-mobile-phone"></i> @phone.Number
                                </div>
                                <div class="col-md-3 col-sm-6">
                                    <i class="fa fa-fw fa-home"></i> @m.LivingAssignmentForSemester(Model.Semester.SemesterId)
                                </div>
                                <div class="col-md-3 col-sm-6">
                                    <i class="fa fa-fw fa-graduation-cap"></i> @m.GraduationSemester.ToString()
                                </div>
                            </div>
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
