@model Dsp.Data.Entities.Fundraiser
@{
    Layout = "~/Views/Shared/_LayoutInternal.cshtml";
    ViewBag.Title = "Create New Fundraiser";
}
@section styles {
    @Styles.Render("~/content/datetimepicker")
}

<div class="container-fluid">
    <div class="row">
        <div class="col-xs-12">
            <p>
                <a href="@Url.Action("Details", "Causes",  new { id = Model.CauseId })" class="btn btn-sm btn-default">
                    <i class="fa fa-caret-left"></i> Back to Cause
                </a>
            </p>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <p>
                This fundraiser is for the following cause: @Model.Cause.Name
            </p>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(m => m.CauseId)

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DonationInstructions, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.DonationInstructions, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.DonationInstructions, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BeginsOn, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group date">
                        @Html.EditorFor(m => m.BeginsOn, new { htmlAttributes = new { @class = "form-control", type = "datetime" } })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.BeginsOn, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EndsOn, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group date">
                        @Html.EditorFor(m => m.EndsOn, new { htmlAttributes = new { @class = "form-control", type = "datetime" } })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.EndsOn, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Goal, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Goal, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.Goal, "", new { @class = "text-danger" })
                </div>

                <div class="checkbox form-group">
                    <label class="control-label">
                        @Html.EditorFor(model => model.IsPublic)
                        @Html.LabelFor(model => model.IsPublic, htmlAttributes: new { @class = "control-label" })
                    </label>
                </div>

                <div class="checkbox form-group">
                    <label class="control-label">
                        @Html.EditorFor(model => model.IsPledgeable)
                        @Html.LabelFor(model => model.IsPledgeable, htmlAttributes: new { @class = "control-label" })
                    </label>
                </div>

                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            }
        </div>
        <div class="col-sm-6">
            <div class="alert alert-warning">
                <strong>Begins / Ends</strong>
                <hr />
                <p>
                    Every fundraiser has a begin date, whether it is today or when the chapter was created.
                    If the fundraiser is ongoing at all times, then it does not have an end date.
                    In this case, you should leave that field blank.
                </p>
            </div>
            <div class="alert alert-warning">
                <strong>Goal</strong>
                <hr />
                <p>
                    Sometimes a fundraiser has a target amount in mind, in which case you can and should specify it in the goal field.
                    If the fundraiser has no goal, set the goal to zero.
                </p>
            </div>
            <div class="alert alert-warning">
                <strong>Display on Donate Page</strong>
                <hr />
                <p>
                    Checking that checkbox will cause the fundraiser to appear on the external "Donate" page.
                    The only exception to this is if the End date of the fundraiser is in the past.
                    The external "Donate" page will not show fundraisers that have ended, even if this checkbox is checked.
                </p>
            </div>
            <div class="alert alert-warning">
                <strong>Allow Donation Pledges</strong>
                <hr />
                <p>
                    Checking that checkbox will cause the fundraiser to appear on the external "Donate" page's "Pledge Dropdown".
                    WARNING: this will only work if you ALSO check the "Display on Donate Page" checkbox.
                </p>
            </div>
        </div>
    </div>
</div>

@section scripts {
    @Scripts.Render("~/bundles/datetimepicker")
    <script type="text/javascript">
        $(function () {
            $('.date').datetimepicker();
        });
    </script>
}
