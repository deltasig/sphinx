@model Dsp.Data.Entities.MajorToMember
@{
    Layout = "~/Views/Shared/_LayoutInternal.cshtml";
    ViewBag.Title = "Assign Major";
    var hasElevatedPermissions = User.IsInRole("Administrator") || User.IsInRole("Academics");
}

<div class="container-fluid">
    <div class="row row-space">
        <div class="col-xs-12">
            <a href="@Url.Action("Index")" class="btn btn-sm btn-default">
                <i class="fa fa-caret-left"></i> Back to Majors
            </a>
            @if (!string.IsNullOrEmpty(ViewBag.UserName))
            {
                <a href="@Url.Action("Index", "Account", new { area = "Members", userName = ViewBag.UserName })" class="btn btn-sm btn-default">
                    <i class="fa fa-caret-left"></i> Back to Profile
                </a>
            }
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            @if (hasElevatedPermissions && ViewBag.UserId.Items.Count <= 1)
            {
                @Html.ActionLink("All Current Members", "Assign", "Majors", new { area = "Edu", id = "" }, new { @class = "pull-right" })
            }
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(m => m.UserId, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("UserId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.UserId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.MajorId, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("MajorId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.MajorId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.DegreeLevel, htmlAttributes: new { @class = "control-label" })
                    @Html.EnumDropDownListFor(m => m.DegreeLevel, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.DegreeLevel, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <input type="submit" value="Assign" class="btn btn-default" /> 
                </div>
            }
        </div>
    </div>
</div>