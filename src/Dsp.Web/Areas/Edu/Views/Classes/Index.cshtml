@using Dsp.Web.Models;
@using Dsp.Web.Areas.Edu.Models;
@model ClassIndexModel
@{
    Layout = "~/Views/Shared/_LayoutInternal.cshtml";
    ViewBag.Title = "Classes";

    var isAdmin = User.IsInRole("Administrator");
    var isAcademics = User.IsInRole("Academics");

    const string sortNumberAscText = "number-asc";
    const string sortNumberDescText = "number-desc";
    const string sortNameAscText = "name-asc";
    const string sortNameDescText = "name-desc";
    const string sortTakenAscText = "taken-asc";
    const string sortTakenDescText = "taken-desc";
    const string sortTakingAscText = "taking-asc";
    const string sortTakingDescText = "taking-desc";
    const string selectMeAllText = "me-all";
    const string selectMeNowText = "me-now";
    const string selectBeingTakenText = "being-taken";
    const string selectNoneTakingText = "none-taking";

    var sortNumberAscFilter = new ClassesIndexFilterModel(Model.Filter);
    var sortNumberDescFilter = new ClassesIndexFilterModel(Model.Filter);
    var sortNameAscFilter = new ClassesIndexFilterModel(Model.Filter);
    var sortNameDescFilter = new ClassesIndexFilterModel(Model.Filter);
    var sortTakenAscFilter = new ClassesIndexFilterModel(Model.Filter);
    var sortTakenDescFilter = new ClassesIndexFilterModel(Model.Filter);
    var sortTakingAscFilter = new ClassesIndexFilterModel(Model.Filter);
    var sortTakingDescFilter = new ClassesIndexFilterModel(Model.Filter);
    var previousPageFilter = new ClassesIndexFilterModel(Model.Filter);
    var nextPageFilter = new ClassesIndexFilterModel(Model.Filter);
    var selectMeAllFilter = new ClassesIndexFilterModel(Model.Filter);
    var selectMeNowFilter = new ClassesIndexFilterModel(Model.Filter);
    var selectBeingTakenFilter = new ClassesIndexFilterModel(Model.Filter);
    var selectNoneTakingFilter = new ClassesIndexFilterModel(Model.Filter);

    sortNumberAscFilter.sort = Model.Filter.sort == sortNumberAscText ? "" : sortNumberAscText;
    sortNumberDescFilter.sort = Model.Filter.sort == sortNumberDescText ? "" : sortNumberDescText;
    sortNameAscFilter.sort = Model.Filter.sort == sortNameAscText ? "" : sortNameAscText;
    sortNameDescFilter.sort = Model.Filter.sort == sortNameDescText ? "" : sortNameDescText;
    sortTakenAscFilter.sort = Model.Filter.sort == sortTakenAscText ? "" : sortTakenAscText;
    sortTakenDescFilter.sort = Model.Filter.sort == sortTakenDescText ? "" : sortTakenDescText;
    sortTakingAscFilter.sort = Model.Filter.sort == sortTakingAscText ? "" : sortTakingAscText;
    sortTakingDescFilter.sort = Model.Filter.sort == sortTakingDescText ? "" : sortTakingDescText;
    previousPageFilter.page = Model.Filter.page - 1;
    nextPageFilter.page = Model.Filter.page + 1;
    selectMeAllFilter.select = Model.Filter.select == selectMeAllText ? "" : selectMeAllText;
    selectMeNowFilter.select = Model.Filter.select == selectMeNowText ? "" : selectMeNowText;
    selectBeingTakenFilter.select = Model.Filter.select == selectBeingTakenText ? "" : selectBeingTakenText;
    selectNoneTakingFilter.select = Model.Filter.select == selectNoneTakingText ? "" : selectNoneTakingText;

    var pagerModel = new PagerModel
    {
        Previous = previousPageFilter,
        Incrementer = Model.Filter,
        Next = nextPageFilter,
        CurrentPage = Model.Filter.page,
        PageSize = Model.Filter.pageSize,
        TotalPages = Model.TotalPages,
        ResultCount = Model.ResultCount
    };
}

<div class="container-fluid">
    <div class="row">
        <div class="col-xs-12">
            <div class="row row-space">
                <div class="col-md-6">
                    @using (Html.BeginForm("Index", "Classes", FormMethod.Get, new { @class = "form-inline" }))
                    {
                        <div class="btn-group" role="group" aria-label="...">
                            <div class="btn-group" role="group" aria-label="...">
                                <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-expanded="true">
                                    Sort <span class="caret"></span>
                                </button>
                                <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu1">
                                    <li role="presentation" class="@(Model.Filter.sort == sortNumberAscText ? "active" : "")">
                                        <a role="menuitem" tabindex="-1" href="@Url.Action("Index", sortNumberAscFilter)">
                                            <i class="fa fa-fw fa-sort-numeric-asc"></i> Class Number <small>ASC</small>
                                        </a>
                                    </li>
                                    <li role="presentation" class="@(Model.Filter.sort == sortNumberDescText ? "active" : "")">
                                        <a role="menuitem" tabindex="-1" href="@Url.Action("Index", sortNumberDescFilter)">
                                            @if (Model.Filter.sort == sortNumberDescText)
                                            {
                                                <i class="fa fa-fw fa-times-circle-o"></i>
                                            }
                                            <i class="fa fa-fw fa-sort-numeric-desc"></i> Class Number <small>DESC</small>
                                        </a>
                                    </li>
                                    <li role="presentation" class="@(Model.Filter.sort == sortNameAscText ? "active" : "")">
                                        <a role="menuitem" tabindex="-1" href="@Url.Action("Index", sortNameAscFilter)">
                                            @if (Model.Filter.sort == sortNameAscText)
                                            {
                                                <i class="fa fa-fw fa-times-circle-o"></i>
                                            }
                                            <i class="fa fa-fw fa-sort-alpha-asc"></i> Class Name <small>ASC</small>
                                        </a>
                                    </li>
                                    <li role="presentation" class="@(Model.Filter.sort == sortNameDescText ? "active" : "")">
                                        <a role="menuitem" tabindex="-1" href="@Url.Action("Index", sortNameDescFilter)">
                                            @if (Model.Filter.sort == sortNameDescText)
                                            {
                                                <i class="fa fa-fw fa-times-circle-o"></i>
                                            }
                                            <i class="fa fa-fw fa-sort-alpha-desc"></i> Class Name <small>DESC</small>
                                        </a>
                                    </li>
                                    <li role="presentation" class="@(Model.Filter.sort == sortTakenAscText ? "active" : "")">
                                        <a role="menuitem" tabindex="-1" href="@Url.Action("Index", sortTakenAscFilter)">
                                            @if (Model.Filter.sort == sortTakenAscText)
                                            {
                                                <i class="fa fa-fw fa-times-circle-o"></i>
                                            }
                                            <i class="fa fa-fw fa-sort-amount-asc"></i> Enrollment Current <small>ASC</small>
                                        </a>
                                    </li>
                                    <li role="presentation" class="@(Model.Filter.sort == sortTakenDescText ? "active" : "")">
                                        <a role="menuitem" tabindex="-1" href="@Url.Action("Index", sortTakenDescFilter)">
                                            @if (Model.Filter.sort == sortTakenDescText)
                                            {
                                                <i class="fa fa-fw fa-times-circle-o"></i>
                                            }
                                            <i class="fa fa-fw fa-sort-amount-desc"></i> Enrollment Current <small>DESC</small>
                                        </a>
                                    </li>
                                    <li role="presentation" class="@(Model.Filter.sort == sortTakingAscText ? "active" : "")">
                                        <a role="menuitem" tabindex="-1" href="@Url.Action("Index", sortTakingAscFilter)">
                                            @if (Model.Filter.sort == sortTakingAscText)
                                            {
                                                <i class="fa fa-fw fa-times-circle-o"></i>
                                            }
                                            <i class="fa fa-fw fa-sort-amount-asc"></i> Enrollment All <small>ASC</small>
                                        </a>
                                    </li>
                                    <li role="presentation" class="@(Model.Filter.sort == sortTakingDescText ? "active" : "")">
                                        <a role="menuitem" tabindex="-1" href="@Url.Action("Index", sortTakingDescFilter)">
                                            @if (Model.Filter.sort == sortTakingDescText)
                                            {
                                                <i class="fa fa-fw fa-times-circle-o"></i>
                                            }
                                            <i class="fa fa-fw fa-sort-amount-desc"></i> Enrollment All <small>DESC</small>
                                        </a>
                                    </li>
                                </ul>
                            </div>
                            <div class="btn-group" role="group" aria-label="...">
                                <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-expanded="true">
                                    Selection <span class="caret"></span>
                                </button>
                                <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu1">
                                    <li role="presentation" class="@(Model.Filter.select == selectMeAllText ? "active" : "")">
                                        <a role="menuitem" tabindex="-1" href="@Url.Action("Index", selectMeAllFilter)">
                                            @if (Model.Filter.select == selectMeAllText)
                                            {
                                                <i class="fa fa-fw fa-times-circle-o"></i>
                                            }
                                            All of my classes
                                        </a>
                                    </li>
                                    <li role="presentation" class="@(Model.Filter.select == selectMeNowText ? "active" : "")">
                                        <a role="menuitem" tabindex="-1" href="@Url.Action("Index", selectMeNowFilter)">
                                            @if (Model.Filter.select == selectMeNowText)
                                            {
                                                <i class="fa fa-fw fa-times-circle-o"></i>
                                            }
                                            All of my current classes
                                        </a>
                                    </li>
                                    <li role="presentation" class="@(Model.Filter.select == selectBeingTakenText ? "active" : "")">
                                        <a role="menuitem" tabindex="-1" href="@Url.Action("Index", selectBeingTakenFilter)">
                                            @if (Model.Filter.select == selectBeingTakenText)
                                            {
                                                <i class="fa fa-fw fa-times-circle-o"></i>
                                            }
                                            Classes being taken
                                        </a>
                                    </li>
                                    <li role="presentation" class="@(Model.Filter.select == selectNoneTakingText ? "active" : "")">
                                        <a role="menuitem" tabindex="-1" href="@Url.Action("Index", selectNoneTakingFilter)">
                                            @if (Model.Filter.select == selectNoneTakingText)
                                            {
                                                <i class="fa fa-fw fa-times-circle-o"></i>
                                            }
                                            Classes not being taken
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                        <hr class="visible-xs" />
                        <div class="input-group">
                            <span class="input-group-addon" id="search-addon" data-toggle="tooltip" data-placement="top"
                                  title="Search by class number, name, department, or member.">
                                <i class="fa fa-search"></i>
                            </span>
                            <input id="page" name="page" type="hidden" value="@Model.Filter.page">
                            <input id="sort" name="sort" type="hidden" value="@Model.Filter.sort">
                            <input id="select" name="select" type="hidden" 
                                   value="@(Model.Filter.select == null ? "" : Model.Filter.select)">
                            <input class="form-control" id="s" name="s" placeholder="Search" type="text" 
                                   value="@Model.Filter.s" aria-describedby="search-addon">
                        </div>
                    }
                    <hr class="visible-xs visible-sm" />
                </div>
                <div class="col-md-6 text-right">
                    <div class="btn-group" role="group" aria-label="...">
                        @{ Html.RenderPartial("~/Areas/Edu/Views/Shared/_EduNavPartial.cshtml"); }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-xs-12">
            @if (Model.Classes.Any())
            {
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-xs-12">
                                @Model.ResultCount <small>Results</small>
                                @if (!string.IsNullOrEmpty(Model.Filter.select))
                                {
                                    string selection = Model.Filter.select;
                                    var text = string.Empty;
                                    switch (selection)
                                    {
                                        case "me-all":
                                            text = "All of my classes";
                                            break;
                                        case "me-now":
                                            text = "My current classes";
                                            break;
                                        case "being-taken":
                                            text = "Classes currently being taken";
                                            break;
                                        case "none-taking":
                                            text = "Classes no one is taking";
                                            break;
                                    }
                                    <small>| Selection: <em>@text</em></small>
                                }
                                @if (!string.IsNullOrEmpty(Model.Filter.s))
                                {
                                    <small>| Searched for: <em>@Model.Filter.s</em></small>
                                }
                                <div class="btn-group pull-right" role="group" aria-label="...">
                                    @if (isAdmin || isAcademics)
                                    {
                                        @Html.ActionLink("Duplicates", "Duplicates", null, new { @class = "btn btn-xs btn-default" })
                                    }
                                    @Html.ActionLink("Add Class", "Create", null, new { @class = "btn btn-xs btn-success" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <ul class="list-group">
                        @foreach (var c in Model.Classes)
                        {
                            <a href="@Url.Action("Details", new {id = c.ClassId})" class="list-group-item">
                                <div class="row">
                                    <div class="col-md-2">
                                        <small>@c.CourseShorthand</small>
                                    </div>
                                    <div class="col-md-6">
                                        <small>@c.CourseName</small>
                                    </div>
                                    <div class="col-md-4 visible-md visible-lg text-right">
                                        <small style="margin-right:15px"
                                               data-toggle="tooltip" data-placement="top" title="Enrollment current / all">
                                            <i class="fa fa-fw fa-users"></i>
                                            @c.ClassesTaken.Count(t => t.SemesterId == Model.CurrentSemester.SemesterId) / @c.ClassesTaken.Count
                                        </small>
                                    </div>
                                    <div class="col-md-4 visible-xs visible-sm">
                                        <small style="margin-right:15px"
                                               data-toggle="tooltip" data-placement="top" title="Enrollment current / all">
                                            <i class="fa fa-fw fa-users"></i>
                                            @c.ClassesTaken.Count(t => t.SemesterId == Model.CurrentSemester.SemesterId) / @c.ClassesTaken.Count
                                        </small>
                                    </div>
                                </div>
                            </a>
                        }
                    </ul>
                    @Html.Partial("~/Views/Shared/_PagerPartial.cshtml", pagerModel)
                </div>
            }
            else
            {
                <div class="alert alert-warning">
                    No classes found.
                </div>
            }
        </div>
    </div>
</div>
