@using Microsoft.AspNet.Identity
@model IEnumerable<Dsp.Data.Entities.MealItem>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Meal Items";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-sm-4">
            <div class="btn-group" role="group" aria-label="...">
                @{ Html.RenderPartial("~/Areas/Kitchen/Views/Shared/_MealsNavPartial.cshtml"); }
            </div>
        </div>
        <div class="col-sm-4 text-sm-right">
            <p>
                @Html.ActionLink("Create New", "Create", "MealItems", new { area = "Kitchen" }, new { @class = "btn btn-sm btn-success" })
            </p>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-8">
            <div class="panel panel-default">
                <div class="table-responsive">
                    <table class="table table-condensed table-hover table-bordered">
                        <thead>
                            <tr class="active">
                                <th class="col-sm-2">Type</th>
                                <th>Name</th>
                                <th class="col-sm-1">
                                    <i data-toggle="tooltip" data-placement="top" title="Total Upvotes" class="fa fa-arrow-circle-up text-success"></i>
                                </th>
                                <th class="col-sm-1">
                                    <i data-toggle="tooltip" data-placement="top" title="Total Downvotes" class="fa fa-arrow-circle-down text-danger"></i>
                                </th>
                                <th class="col-sm-1">Favorability</th>
                                <th class="col-sm-2"></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                var ups = item.MealVotes.Count(v => v.IsUpvote);
                                var downs = item.MealVotes.Count(v => !v.IsUpvote);
                                var favor = 0.0;
                                var favorability = "0.00";
                                var color = string.Empty;
                                if (item.MealVotes.Any())
                                {
                                    favor = (ups / (double)item.MealVotes.Count()) * 100.0;
                                    favorability = (favor).ToString("F");
                                }
                                if (favor >= 80.0)
                                {
                                    color = "success";
                                }
                                else if (favor >= 40)
                                {
                                    color = "warning";
                                }
                                else if (favor > 0)
                                {
                                    color = "danger";
                                }

                                <tr>
                                    <td><small>@item.MealItemType.Name</small></td>
                                    <td>
                                        <ul class="list-inline" style="margin: 0">
                                            <li style="padding: 0">
                                                @item.Name
                                            </li>
                                            <li style="padding: 0">
                                                <a href="@Url.Action("Upvote", "Meals", new { id = item.MealItemId })">
                                                    @if (item.MealVotes.Any(v => v.MealItemId == item.MealItemId && v.IsUpvote && v.UserId == User.Identity.GetUserId<int>()))
                                                    {
                                                        <i data-toggle="tooltip" data-placement="top" title="Cancel Upvote" class="fa fa-lg fa-arrow-circle-up text-success"></i>
                                                    }
                                                    else
                                                    {
                                                        <i data-toggle="tooltip" data-placement="top" title="Upvote" class="fa fa-arrow-circle-up text-muted"></i>
                                                    }
                                                </a>
                                            </li>
                                            <li style="padding: 0">
                                                <a href="@Url.Action("Downvote", "Meals", new { id = item.MealItemId })">
                                                    @if (item.MealVotes.Any(v => v.MealItemId == item.MealItemId && !v.IsUpvote && v.UserId == User.Identity.GetUserId<int>()))
                                                    {
                                                        <i data-toggle="tooltip" data-placement="top" title="Cancel Downvote" class="fa fa-lg fa-arrow-circle-down text-danger"></i>
                                                    }
                                                    else
                                                    {
                                                        <i data-toggle="tooltip" data-placement="top" title="Downvote" class="fa fa-arrow-circle-down text-muted"></i>
                                                    }
                                                </a>
                                            </li>
                                        </ul>
                                    </td>
                                    <td>@ups</td>
                                    <td>@downs</td>
                                    <td class="@color">@favorability</td>
                                    <td class="text-right">
                                        @if (User.IsInRole("Administrator") || User.IsInRole("House Steward"))
                                        {
                                            @Html.ActionLink("Edit", "Edit", new { id = item.MealItemId })
                                            if (!item.MealToItems.Any())
                                            {
                                                @: |
                                                @Html.ActionLink("Delete", "Delete", new { id = item.MealItemId })
                                            }
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
