@using Microsoft.AspNet.Identity
@model Dsp.Web.Areas.Kitchen.Models.MealScheduleModel
@{
    Layout = "~/Views/Shared/_LayoutInternal.cshtml";
    ViewBag.Title = "Meal Schedule";
    ViewBag.Subtitle = Model.StartOfWeek.ToShortDateString() + " to " + Model.StartOfWeek.AddDays(6).ToShortDateString();
    ViewBag.Print = true;

    var startDay = 0;
    var endDay = 7;
    var hideSunday = false;
    var hideSaturday = false;

    if (!Model.MealsToPeriods.Any(mp => mp.Date == Model.StartOfWeek.Date && mp.Meal != null))
    {
        startDay = 1;
        hideSunday = true;
    }
    if (!Model.MealsToPeriods.Any(mp => mp.Date == Model.StartOfWeek.AddDays(6).Date && mp.Meal != null))
    {
        endDay = 6;
        hideSaturday = true;
    }

    var cstZone = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");
    var startOfWeek = (DateTime)ViewBag.StartOfWeek;
}
@section AdditionalMeta{
    <meta http-equiv="refresh" content="60">
}
@section styles{
    <style type="text/css" media="print">
        @@page {size: landscape}
    </style>
}

<div class="container-fluid">
    <div class="row row-space no-print">
        <div class="col-lg-6">
            <div class="btn-group" role="group" aria-label="...">
                @{ Html.RenderPartial("~/Areas/Kitchen/Views/Shared/_MealsNavPartial.cshtml"); }
            </div>
        </div>
        <div class="col-lg-6 text-sm-right">
            <hr class="hidden-lg" />            
            <div class="btn-group" role="group" aria-label="...">
                <a class="btn btn-sm btn-default" href="@Url.Action("Schedule", "Meals", new { week = ViewBag.week - 1 })">
                    <i class="fa fa-caret-left"></i> Previous Week
                </a>
                <a class="btn btn-sm btn-default disabled hidden-xs" href="#">
                    @Model.StartOfWeek.ToShortDateString() to @Model.StartOfWeek.AddDays(6).ToShortDateString()
                </a>
                <a class="btn btn-sm btn-default" href="@Url.Action("Schedule", "Meals", new {week = ViewBag.week + 1})">
                    Next Week <i class="fa fa-caret-right"></i>
                </a>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-xs-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Posted Meals
                    @if (User.IsInRole("Administrator") || User.IsInRole("House Steward"))
                    {
                        <a class="btn btn-xs btn-info pull-right no-print" href="@Url.Action("EditSchedule", "Meals", new { ViewBag.week })">
                            <i class="fa fa-pencil"></i>
                        </a>
                    }
                </div>
                <div class="table-responsive">
                    <table class="table table-condensed table-bordered">
                        <thead>
                        <tr class="active">
                            <th class="text-center"><small>Period</small></th>
                            @if (!hideSunday)
                            {
                                <th class="@(@Model.StartOfWeek.Date == DateTime.UtcNow.Date ? "warning" : "") text-center col-sm-2">
                                    <small>@Model.StartOfWeek.ToString("ddd")</small>
                                </th>
                            }
                            <th class="@(@Model.StartOfWeek.AddDays(1).Date == DateTime.UtcNow.Date ? "warning" : "") text-center col-sm-2">
                                <small>@Model.StartOfWeek.AddDays(1).ToString("ddd")</small>
                            </th>
                            <th class="@(@Model.StartOfWeek.AddDays(2).Date == DateTime.UtcNow.Date ? "warning" : "") text-center col-sm-2">
                                <small>@Model.StartOfWeek.AddDays(2).ToString("ddd")</small>
                            </th>
                            <th class="@(@Model.StartOfWeek.AddDays(3).Date == DateTime.UtcNow.Date ? "warning" : "") text-center col-sm-2">
                                <small>@Model.StartOfWeek.AddDays(3).ToString("ddd")</small>
                            </th>
                            <th class="@(@Model.StartOfWeek.AddDays(4).Date == DateTime.UtcNow.Date ? "warning" : "") text-center col-sm-2">
                                <small>@Model.StartOfWeek.AddDays(4).ToString("ddd")</small>
                            </th>
                            <th class="@(@Model.StartOfWeek.AddDays(5).Date == DateTime.UtcNow.Date ? "warning" : "") text-center col-sm-2">
                                <small>@Model.StartOfWeek.AddDays(5).ToString("ddd")</small>
                            </th>
                            @if (!hideSaturday)
                            {
                                <th class="@(@Model.StartOfWeek.AddDays(6).Date == DateTime.UtcNow.Date ? "warning" : "") text-center">
                                    <small>@Model.StartOfWeek.AddDays(6).ToString("ddd")</small>
                                </th>
                            }
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var p in Model.MealPeriods)
                        {
                            var start = TimeZoneInfo.ConvertTimeFromUtc(p.StartTime, cstZone);
                            var end = TimeZoneInfo.ConvertTimeFromUtc(p.EndTime, cstZone);

                            <tr>
                                <td class="active text-center col-md-2">
                                    <small>
                                        <strong>@p.Name</strong>
                                        <br />
                                        @start.ToString("hh:mm tt") - @end.ToString("hh:mm tt")
                                    </small>
                                </td>
                                @for (var i = startDay; i < endDay; i++)
                                {
                                    var slot = Model.MealsToPeriods
                                        .SingleOrDefault(m =>
                                            m.MealPeriodId == p.Id &&
                                            m.Date == Model.StartOfWeek.AddDays(i).Date);
                                    <td>
                                        @if (Request.IsAuthenticated)
                                        {
                                            var date = startOfWeek.AddDays(i).Date;
                                            var dateTime = new DateTime(
                                                date.Year, date.Month, date.Day,
                                                start.Hour, start.Minute, 0);
                                            using (Html.BeginForm("AddPlate", "Meals", new
                                            {
                                                dateTime,
                                                type = "Late",
                                                ViewBag.week
                                            }, FormMethod.Post, new
                                            {
                                                @class = "pull-right no-print"
                                            }))
                                            {
                                                @Html.AntiForgeryToken()
                                                <button class="btn btn-link btn-light" type="submit"
                                                        data-toggle="tooltip" data-placement="top"
                                                        title="Add Late Plate">
                                                    <i class="fa fa-plus-square"></i>
                                                </button>
                                            }


                                            using (Html.BeginForm("AddPlate", "Meals", new
                                            {
                                                dateTime,
                                                type = "+1",
                                                ViewBag.week
                                            }, FormMethod.Post, new
                                            {
                                                @class = "pull-right no-print"
                                            }))
                                            {
                                                @Html.AntiForgeryToken()
                                                <button class="btn btn-link btn-light social" type="submit"
                                                        data-toggle="tooltip" data-placement="top"
                                                        title="Add +1 Plate">
                                                    <i class="fa fa-plus-circle"></i>
                                                </button>
                                            }

                                            using (Html.BeginForm("AddPlate", "Meals", new
                                            {
                                                dateTime,
                                                type = "Guest",
                                                ViewBag.week
                                            }, FormMethod.Post, new
                                            {
                                                @class = "pull-right no-print"
                                            }))
                                            {
                                                @Html.AntiForgeryToken()
                                                <button class="btn btn-link btn-light" type="submit"
                                                        data-toggle="tooltip" data-placement="top"
                                                        title="Add Guest Plate">
                                                    <i class="fa fa-plus-square-o"></i>
                                                </button>
                                            }
                                        }
                                        @if (slot != null)
                                        {
                                            if (Request.IsAuthenticated)
                                            {
                                                <br class="visible-xs no-print"/>
                                            }
                                            foreach (var item in slot.Meal.MealItems.OrderBy(m => m.DisplayOrder))
                                            {
                                                <ul class="list-inline" style="margin: 0">
                                                    <li style="padding: 0">
                                                        <small>@item.MealItem.Name</small>
                                                    </li>
                                                    @if (Request.IsAuthenticated)
                                                    {
                                                        <li class="no-print" style="padding: 0">
                                                            <a href="@Url.Action("Upvote", "Meals", new {id = item.MealItemId, ViewBag.week, returnUrl = ViewBag.ReturnUrl})">
                                                                @if (Model.UsersVotes.Any(v => v.MealItemId == item.MealItemId && v.IsUpvote))
                                                                {
                                                                    <i data-toggle="tooltip" data-placement="top" title="Cancel Upvote" class="fa fa-lg fa-arrow-circle-up text-success"></i>
                                                                }
                                                                else
                                                                {
                                                                    <i data-toggle="tooltip" data-placement="top" title="Upvote" class="fa fa-arrow-circle-up text-muted"></i>
                                                                }
                                                            </a>
                                                        </li>
                                                        <li class="no-print" style="padding: 0">
                                                            <a href="@Url.Action("Downvote", "Meals", new {id = item.MealItemId, ViewBag.week, returnUrl = ViewBag.ReturnUrl})">
                                                                @if (Model.UsersVotes.Any(v => v.MealItemId == item.MealItemId && !v.IsUpvote))
                                                                {
                                                                    <i data-toggle="tooltip" data-placement="top" title="Cancel Downvote" class="fa fa-lg fa-arrow-circle-down text-danger"></i>
                                                                }
                                                                else
                                                                {
                                                                    <i data-toggle="tooltip" data-placement="top" title="Downvote" class="fa fa-arrow-circle-down text-muted"></i>
                                                                }
                                                            </a>
                                                        </li>
                                                    }
                                                </ul>
                                            }
                                        }
                                    </td>
                                }
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <!-- Visible if user is signed in OR if they're viewing the current week only while being signed out. -->
    @if (Request.IsAuthenticated || (!Request.IsAuthenticated && ViewBag.week == 0))
    {
        <div class="row no-print">
            <div class="col-xs-12">
                <div class="panel panel-default">
                    <div class="panel-heading">Plate Signups</div>
                    <div class="table-responsive">
                        <table class="table table-bordered">
                            <thead>
                                <tr class="active">
                                    <th class="text-center"><small>Period</small></th>
                                    @if (!hideSunday)
                                    {
                                        <th class="@(@Model.StartOfWeek.Date == DateTime.UtcNow.Date ? "warning" : "") text-center col-sm-2">
                                            <small>@Model.StartOfWeek.ToString("ddd")</small>
                                        </th>
                                    }
                                    <th class="@(@Model.StartOfWeek.AddDays(1).Date == DateTime.UtcNow.Date ? "warning" : "") text-center col-sm-2">
                                        <small>@Model.StartOfWeek.AddDays(1).ToString("ddd")</small>
                                    </th>
                                    <th class="@(@Model.StartOfWeek.AddDays(2).Date == DateTime.UtcNow.Date ? "warning" : "") text-center col-sm-2">
                                        <small>@Model.StartOfWeek.AddDays(2).ToString("ddd")</small>
                                    </th>
                                    <th class="@(@Model.StartOfWeek.AddDays(3).Date == DateTime.UtcNow.Date ? "warning" : "") text-center col-sm-2">
                                        <small>@Model.StartOfWeek.AddDays(3).ToString("ddd")</small>
                                    </th>
                                    <th class="@(@Model.StartOfWeek.AddDays(4).Date == DateTime.UtcNow.Date ? "warning" : "") text-center col-sm-2">
                                        <small>@Model.StartOfWeek.AddDays(4).ToString("ddd")</small>
                                    </th>
                                    <th class="@(@Model.StartOfWeek.AddDays(5).Date == DateTime.UtcNow.Date ? "warning" : "") text-center col-sm-2">
                                        <small>@Model.StartOfWeek.AddDays(5).ToString("ddd")</small>
                                    </th>
                                    @if (!hideSaturday)
                                    {
                                        <th class="@(@Model.StartOfWeek.AddDays(6).Date == DateTime.UtcNow.Date ? "warning" : "") text-center">
                                            <small>@Model.StartOfWeek.AddDays(6).ToString("ddd")</small>
                                        </th>
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var p in Model.MealPeriods)
                                {
                                    var start = TimeZoneInfo.ConvertTimeFromUtc(p.StartTime, cstZone);
                                    var end = TimeZoneInfo.ConvertTimeFromUtc(p.EndTime, cstZone);

                                    <tr>
                                        <td class="active text-center col-md-2">
                                            <small>
                                                <strong>@p.Name</strong>
                                                <br />
                                                @start.ToString("hh:mm tt") - @end.ToString("hh:mm tt")
                                            </small>
                                        </td>
                                        @for (var i = startDay; i < endDay; i++)
                                        {
                                            var date = startOfWeek.AddDays(i).Date;
                                            var dateTime = new DateTime(
                                                date.Year, date.Month, date.Day,
                                                start.Hour, start.Minute, 0);
                                            var plates = Model.Plates.Where(mp => mp.PlateDateTime == dateTime).ToList();

                                            <td>
                                                @if (plates.Any())
                                                {
                                                    foreach (var plate in plates)
                                                    {
                                                        string name;
                                                        // Hide last names for unauthenticated viewing.
                                                        if (!Request.IsAuthenticated)
                                                        {
                                                            name = plate.Member.FirstName + " " + plate.Member.LastName[0] + ".";
                                                        }
                                                        else
                                                        {
                                                            name = plate.Member.ToString();
                                                        }

                                                        <div class="row">
                                                            <div class="col-sm-9">
                                                                <small>@name <em>(@plate.Type)</em></small>
                                                            </div>
                                                            <div class="col-sm-3 text-right-sm text-left-xs">
                                                                @if (plate.UserId == User.Identity.GetUserId<int>() ||
                                                                User.IsInRole("Administrator") || User.IsInRole("House Steward"))
                                                                {
                                                                    using (Html.BeginForm("RemovePlate", "Meals", new { id = plate.Id, ViewBag.week },
                                                                        FormMethod.Post, new { @class = "" }))
                                                                    {
                                                                        @Html.AntiForgeryToken()
                                                                        <button class="btn btn-link btn-light" type="submit"
                                                                                data-toggle="tooltip" data-placement="left" title="Cancel">
                                                                            <i class="fa fa-times-circle text-danger"></i>
                                                                        </button>
                                                                    }
                                                                }
                                                            </div>
                                                        </div>
                                                    }
                                                }
                                            </td>
                                        }
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="panel-footer">
                        <small>
                            <em>Late</em> = late plate (only 1 allowed) | <em>+1</em> = extra plate | <em>Guest</em> = guest plate
                        </small>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
