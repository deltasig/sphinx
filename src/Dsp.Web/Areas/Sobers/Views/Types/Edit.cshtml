@model Dsp.Data.Entities.SoberType
@{
    Layout = "~/Views/Shared/_LayoutInternal.cshtml";
    ViewBag.Title = "Edit Sober Type";
}
@section styles {
    @Styles.Render("~/content/markdown")
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-4">
            <p>
                <a href="@Url.Action("Index")" class="btn btn-sm btn-default">
                    <i class="fa fa-caret-left"></i> Back to Index
                </a>
            </p>
        </div>
        <div class="col-md-4 text-right">
            @if (!Model.Signups.Any())
            {
                <a class="btn btn-sm btn-danger"
                   href="@Url.Action("Delete", new { id = Model.SoberTypeId })">
                    <i class="fa fa-fw fa-times-circle"></i>
                    Delete
                </a>
            }
        </div>
    </div>
    <div class="row">
        <div class="col-md-8">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                @Html.HiddenFor(model => model.SoberTypeId)

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, new {@class = "control-label"})
                    @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(model => model.Description, new {@class = "control-label"})
                    <div class="wmd-panel">
                        <div id="wmd-button-bar"></div>
                        @Html.EditorFor(model => model.Description, new {htmlAttributes = new {@class = "form-control wmd-input", rows = 10, id = "wmd-input"}})
                    </div>
                    <div class="wmd-panel wmd-preview well well-sm" id="wmd-preview"></div>
                    @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
                </div>

                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-default"/>
                </div>
            }
        </div>
    </div>
</div>

@section scripts {
    @Scripts.Render("~/bundles/markdown")
    <script type="text/javascript">
        
        $(function () {
            var converter = Markdown.getSanitizingConverter();
            var editor = new Markdown.Editor(converter);
            editor.run();
        });

    </script>
}