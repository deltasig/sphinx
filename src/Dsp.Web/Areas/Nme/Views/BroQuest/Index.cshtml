@using Dsp.Web.Areas.Nme.Models
@using System.Web.Mvc.Html
@model BroQuestIndexModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "BroQuest";
    ViewBag.Subtitle = Model.Semester;
    var hasElevatedPermissions = User.IsInRole("Administrator") || User.IsInRole("New Member Educator");
    var userCompletions = Model.Member.QuestCompletions.Where(c => c.Challenge.SemesterId == Model.Semester.SemesterId);
    var userChallenges = userCompletions.Select(c => c.Challenge);
    var listCount = 0;

    var filter = new BroQuestIndexFilterModel
    {
        i = ViewBag.i,
        c = ViewBag.c
    };

    var incompleteFilter = new BroQuestIndexFilterModel(filter);
    var completeFilter = new BroQuestIndexFilterModel(filter);

    incompleteFilter.i = !filter.i;
    completeFilter.c = !filter.c;
}

<div class="container-fluid">
    <div class="row row-space">
        <div class="col-md-3">
            <p id="time-left" class="hidden">
                
            </p>
        </div>
        <div class="col-md-3 text-right">
            @if (hasElevatedPermissions)
            {
                <a href="@Url.Action("Manager")" class="btn btn-sm btn-default">
                    <i class="fa fa-wrench"></i> Manager
                </a>
            }
        </div>
    </div>
    <div class="row">
        <div class="col-md-8 col-lg-6">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <div class="row">
                        <div class="col-sm-6">
                            @using (Html.BeginForm("Index", "BroQuest", FormMethod.Get, new { @class = "form-inline" }))
                            {

                                <div class="btn-group" role="group" aria-label="...">
                                    @Html.ActionLink("Incomplete", "Index", "BroQuest", incompleteFilter, new
                                    {
                                        @class = "btn btn-default " + (ViewBag.i ? "active" : "")
                                    })
                                    @Html.ActionLink("Complete", "Index", "BroQuest", completeFilter, new
                                    {
                                        @class = "btn btn-default " + (ViewBag.c ? "active" : "")
                                    })
                                </div>
                            }
                        </div>
                        <div class="col-sm-6 text-sm-right">
                            <a href="@Url.Action("Challenges")" class="btn btn-sm btn-default">
                                <i class="fa fa-bolt"></i> My Challenges
                            </a>
                        </div>
                    </div>
                </div>
                <div class="panel-body">
                    <div class="progress" style="margin: 0;">
                        <div class="progress-bar progress-bar-striped progress-bar-success" role="progressbar"
                             id="progress" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
                        </div>
                    </div>
                </div>
                <div class="list-group">
                    @foreach (var m in Model.Members.OrderBy(o => o.LastName).ThenBy(o => o.FirstName))
                    {
                        var challenges = m.QuestChallenges.Where(c => c.SemesterId == Model.Semester.SemesterId);
                        var overlap = challenges.Intersect(userChallenges);
                        string statusIcon = "fa-circle text-danger";
                        string statusText = "Unchallenged";
                        if (overlap.Any())
                        {
                            statusIcon = "fa-check";
                            if(overlap.Any(c => c.EndsOn < DateTime.UtcNow))
                            {
                                if (!ViewBag.c)
                                {
                                    continue;
                                }

                                statusIcon += " text-success";
                                statusText = "Complete";
                            }
                            else
                            {
                                statusIcon += " text-warning";
                                statusText = "Challenge Accepted";
                            }
                        }
                        else if(!ViewBag.i)
                        {
                            continue;
                        }
                        listCount++;

                        <a href="@Url.Action("Index", "Account", new {userName = m.UserName, area = "Members"})" class="list-group-item">
                            <h5 class="list-group-item-heading">
                                @m.ToString()
                                <small class="pull-right">
                                    @statusText <i class="fa fa-fw @statusIcon"></i> 
                                </small>
                            </h5>
                        </a>
                    }
                    @if(listCount == 0)
                    {
                        <li class="list-group-item list-group-item-warning">
                            No results
                        </li>
                    }
                </div>
                <div class="panel-footer">
                    Count: @listCount 
                </div>
            </div>
        </div>
    </div>
</div>


@section scripts {
    <script type="text/javascript">
        'use strict';
        (function () {
            function setTimeLeft(label) {
                $("#time-left").text(label);
                $("#time-left").removeClass("hidden");
            }

            function getTimeLeft() {
                var xhr = new XMLHttpRequest();
                xhr.open("GET", "/api/broquest/timeleft", true);
                xhr.onload = function (e) {
                    if (xhr.readyState === 4) {
                        if (xhr.status === 200) {
                            setTimeLeft(xhr.responseText.replace(/['"]+/g, ''));
                        } else {
                            console.error(xhr.statusText);
                        }
                    }
                };
                xhr.onerror = function (e) {
                    console.error(xhr.statusText);
                };
                xhr.send(null);
            }

            function setProgress(label) {
                var p = Number(label);
                if (p > 100) p = 100;
                else if (p < 0) p = 0;
                $("#progress").text(label + "%");
                $("#progress").width(label+"%");
                $("#progress").removeClass("hidden");
            }

            function getProgress() {
                var xhr = new XMLHttpRequest();
                var url = "/api/broquest/progress/@(Model.Member.Id)";
                xhr.open("GET", url, true);
                xhr.onload = function (e) {
                    if (xhr.readyState === 4) {
                        if (xhr.status === 200) {
                            setProgress(xhr.responseText);
                        } else {
                            console.error(xhr.statusText);
                        }
                    }
                };
                xhr.onerror = function (e) {
                    console.error(xhr.statusText);
                };
                xhr.send(null);
            }

            getTimeLeft();
            getProgress();
        })();

    </script>
}