@using Dsp.Web.Extensions;
@using Dsp.Web.Areas.Nme.Models
@model BroQuestChallengeModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "BroQuest Challenges";
    ViewBag.Subtitle = Model.Member + " | " + Model.Semester;

    var start = Model.Semester.QuestingBeginsOn.FromUtcToCst();
    var end = Model.Semester.QuestingEndsOn.FromUtcToCst();
    var interval = Model.Semester.MaxQuestChallengeMinutes;
    var headers = new List<DateTime>();
    if (start < DateTime.UtcNow.FromUtcToCst())
    {
        start = DateTime.UtcNow.FromUtcToCst().Date;
    }

    if (start.AddDays(14) < end.Date)
    {
        end = start.AddDays(13);
    }

    for (var rolling = start.Date; rolling <= end.Date; rolling = rolling.AddDays(1))
    {
        headers.Add(rolling);
    }
}

<div class="container-fluid">
    <div class="row row-space">
        <div class="col-md-6">
            <a href="@Url.Action("Index")" class="btn btn-sm btn-default">
                <i class="fa fa-caret-left"></i> Back to Index
            </a>
        </div>
        <div class="col-md-6 text-right">

        </div>
    </div>
    <div class="row">
        <div class="col-xs-12">
            <table class="table table-condensed table-bordered"
                   style="-moz-user-select: none; -webkit-user-select: none; -ms-user-select:none; user-select:none;-o-user-select:none;">
                <thead style="user-select:none;">
                    <tr class="active">
                        @if (headers.Any())
                        {
                            <th></th>
                            foreach (var h in headers)
                            {
                                var color = string.Empty;
                                if (h.Date == DateTime.UtcNow.FromUtcToCst()) { color = "success"; }

                                <th class="@color text-center"><small>@h.ToString("ddd MM/dd")</small></th>
                            }
                        }
                    </tr>
                </thead>
                <tbody>
                    @for (var i = 0; i < 1440; i += 15)
                    {
                        var hour = ((i / 60) % 12).ToString("D2");
                        hour = hour == "00" ? "12" : hour;
                        var minute = (i % 60).ToString("D2");
                        var time = hour + ":" + minute;
                        if ((i / 60) < 12)
                        {
                            time += " am";
                        }
                        else
                        {
                            time += " pm";
                        }
                        <tr class="@(minute == "00" ? "active" : "")">
                            <td class="active text-right" style="user-select:none;">
                                <small>
                                    @if (minute == "00")
                                    {
                                        <strong>@time</strong>
                                    }
                                    else
                                    {
                                        @time
                                    }
                                </small>
                            </td>
                            @foreach (var h in headers)
                            {
                                TimeSpan elapsedSpan = new TimeSpan(h.AddMinutes(i).Ticks);

                                <td id="@elapsedSpan.TotalMinutes" onmousedown="clicked(this)"></td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section scripts {
    <script type="text/javascript">
        'use strict';
        var sid = @(Model.Semester.SemesterId);
        var mid = @(Model.Member.Id);

        getChallenges(mid, sid);

        function getChallenges(m, s) {
            var uri = `/api/broquest/challenges/${m}/${s}`;
            $.get(uri, function (results) {
                $.each(results, function(i, slot){
                    var time = slot.time;
                    if(!slot.isFull) {
                        $("#"+time).addClass("success");
                    } else {
                        $("#"+time).addClass("warning");
                    }
                    $("#"+time).text("");
                    $.each(slot.newMembers, function(k, nm) {
                        $("#"+time).append(`<small>${nm.item2}</small><br>`);
                    });
                });
            })
            .fail(function (result) {
                console.log(result);
            });
        }

        function clicked(ele) {
            if($(ele).hasClass("success") === true) {
                // unaccept challenge
            } else if($(ele).hasClass("warning")) { 
                // accept challenge
            }
        }

        function acceptChallenge(ele) {
            if($(ele).hasClass(color) && state == 1) return;
            $.ajax({
                url: '/api/broquest/challenge',
                type: 'POST',
                data: { mid: mid, sid: sid, mins: ele.id },
                success: function (result) {
                    if(result.constructor === Array) {
                        $.each(result, function() {
                            $("#"+this).addClass(color);
                        });
                    } else {
                        console.log(result);
                        $(ele).addClass("danger");
                        setTimeout(function() { $(ele).removeClass("danger") }, 150);
                    }
                },
                error: function (result) {
                    //console.log(result);
                }
            });
        }

        function unacceptChallenge(ele) {
            if(!$(ele).hasClass(color) && state == 0) return;
            $.ajax({
                url: '/api/broquest/challenge',
                type: 'DELETE',
                data: { mid: mid, sid: sid, mins: ele.id },
                success: function (result) {
                    if(result.constructor === Array) {
                        $.each(result, function() {
                            $("#"+this).removeClass(color);
                        });
                    } else {
                        console.log(result);
                    }
                },
                error: function (result) {
                    //console.log(result);
                }
            });
        }
        
    </script>
}