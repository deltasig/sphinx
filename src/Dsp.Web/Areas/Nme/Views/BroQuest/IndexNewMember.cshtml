@using Dsp.Web.Areas.Nme.Models
@using System.Web.Mvc.Html
@using Microsoft.AspNet.Identity;
@using Dsp.Web.Extensions;
@model BroQuestIndexModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "BroQuest";
    ViewBag.Subtitle = "New Member | " + Model.Semester;
    var currentUserId = User.Identity.GetUserId<int>();
    var userChallenges = Model.Member.QuestChallenges.Where(c => c.SemesterId == Model.Semester.SemesterId);
    var totalChallengeTime = userChallenges
        .Sum(c => (c.EndsOn - c.BeginsOn).TotalMinutes);
    var listCount = 0;

    var filter = new BroQuestIndexFilterModel
    {
        i = ViewBag.i,
        c = ViewBag.c
    };

    var incompleteFilter = new BroQuestIndexFilterModel(filter);
    var completeFilter = new BroQuestIndexFilterModel(filter);

    incompleteFilter.i = !filter.i;
    completeFilter.c = !filter.c;

}

<div class="container-fluid">
    <div class="row row-space">
        <div class="col-md-3">
            <p id="time-left" class="hidden">

            </p>
        </div>
        <div class="col-md-3 text-right">

        </div>
    </div>
    <div class="row">
        <div class="col-md-8 col-lg-6">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <div class="row">
                        <div class="col-sm-6">
                            @using (Html.BeginForm("Index", "BroQuest", FormMethod.Get, new { @class = "form-inline" }))
                            {

                                <div class="btn-group" role="group" aria-label="...">
                                    @Html.ActionLink("Incomplete", "Index", "BroQuest", incompleteFilter, new
                                    {
                                        @class = "btn btn-default " + (ViewBag.i ? "active" : "")
                                    })
                                        @Html.ActionLink("Complete", "Index", "BroQuest", completeFilter, new
                                    {
                                        @class = "btn btn-default " + (ViewBag.c ? "active" : "")
                                    })
                                </div>
                            }
                        </div>
                        <div class="col-sm-6 text-sm-right">

                        </div>
                    </div>
                </div>
                <div class="panel-body">
                    @if (Model.Members.Any())
                    {
                        <div class="progress" style="margin: 0;">
                            <div class="progress-bar progress-bar-striped progress-bar-success" role="progressbar"
                                 id="progress" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
                            </div>
                        </div>
                    }
                </div>
                <div class="list-group">
                    @foreach (var m in Model.Members.OrderBy(o => o.LastName).ThenBy(o => o.FirstName))
                    {
                        var challenges = m.QuestChallenges.Where(c => c.SemesterId == Model.Semester.SemesterId);
                        var futureChallenges = challenges.Where(c => c.BeginsOn > DateTime.UtcNow.FromUtcToCst());
                        var futureAvailableChallenges = futureChallenges.Where(c => c.Completions.Count() < m.MaxQuesters).OrderBy(c => c.BeginsOn);
                        var availabilityCount = futureAvailableChallenges.Count();
                        var availabilityHours = futureAvailableChallenges.Sum(c => (c.EndsOn - c.BeginsOn).Minutes) / 60.0;
                        var nextAvailable = futureAvailableChallenges.FirstOrDefault();

                        string statusIcon = "fa-circle text-danger";
                        string statusText = "Unchallenged";

                        if (challenges.Any(c => c.Member.Id == currentUserId))
                        {
                            statusIcon = "fa-check";
                            if (challenges.Any(c => c.EndsOn < DateTime.UtcNow))
                            {
                                if (!ViewBag.c)
                                {
                                    continue;
                                }

                                statusIcon += " text-success";
                                statusText = "Complete";
                            }
                            else
                            {
                                statusIcon += " text-warning";
                                statusText = "Challenge Accepted";
                            }
                        }
                        else if (!ViewBag.i) // Don't display incomplete members if the button is set as such.
                        {
                            continue;
                        }
                        listCount++;

                        var url = Url.Action("Challenges", "BroQuest", new { userName = m.UserName });

                        <a @(availabilityCount > 0 ? "href=" + url : "") class="list-group-item @(availabilityCount <= 0 ? "disabled" : "")">
                            <div class="row">
                                <div class="col-md-3">
                                    <small>
                                        <strong>@m.ToString()</strong>
                                    </small>
                                </div>
                                <div class="col-md-3">
                                    <small>
                                        <i class="fa fa-phone"> @m.PhoneNumbers.SingleOrDefault(p => p.Type == "Mobile").Number</i>
                                    </small>
                                </div>
                                <div class="col-md-3">
                                    <small>
                                        <i class="fa fa-home"> @m.LivingAssignmentForSemester(Model.Semester.SemesterId)</i>
                                    </small>
                                </div>
                                <div class="col-md-3 text-md-right">
                                    <small>
                                        @statusText <i class="fa fa-fw @statusIcon"></i>
                                    </small>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                        @if (nextAvailable != null)
                                        {
                                            <small>
                                                Next available on:
                                                <span class="label label-warning">@nextAvailable.BeginsOn.ToString("MMM. dd @ hh:mm tt")</span>
                                            </small>
                                        }
                                        else
                                        {
                                            <small class="text-danger">
                                                Hasn't reported any availability yet
                                            </small>
                                        }
                                </div>
                                <div class="col-md-6">
                                    <small>

                                        @if (availabilityCount > 0)
                                        {
                                            @: Total scheduled availability: 
                                            <span class="label label-success">@availabilityHours hours</span>
                                        }
                                    </small>
                                </div>
                            </div>
                        </a>
                    }
                    @if (listCount == 0)
                    {
                        <div class="list-group-item list-group-item-warning">
                            No results
                        </div>
                    }
                </div>
                <div class="panel-footer">
                    <span data-toggle="tooltip" data-placement="top" title="Members">
                        <i class="fa fa-users"></i>
                        @listCount
                    </span>
                </div>
            </div>
        </div>
    </div>
</div>


@section scripts {
    <script type="text/javascript">
        'use strict';
        var userId = @currentUserId;
        getTimeLeft();
        getProgress();

        function setTimeLeft(label) {
            $("#time-left").text(label);
            $("#time-left").removeClass("hidden");
        }

        function getTimeLeft() {
            var xhr = new XMLHttpRequest();
            xhr.open("GET", "/api/broquest/timeleft", true);
            xhr.onload = function (e) {
                if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                        setTimeLeft(xhr.responseText.replace(/['"]+/g, ''));
                    } else {
                        console.error(xhr.statusText);
                    }
                }
            };
            xhr.onerror = function (e) {
                console.error(xhr.statusText);
            };
            xhr.send(null);
        }

        function setProgress(label) {
            var p = Number(label);
            if (p > 100) p = 100;
            else if (p < 0) p = 0;
            $("#progress").text(label + "%");
            $("#progress").width(label + "%");
            $("#progress").removeClass("hidden");
        }

        function getProgress() {
            var xhr = new XMLHttpRequest();
            var url = "/api/broquest/progress/" + userId;
            xhr.open("GET", url, true);
            xhr.onload = function (e) {
                if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                        setProgress(xhr.responseText);
                    } else {
                        console.error(xhr.statusText);
                    }
                }
            };
            xhr.onerror = function (e) {
                console.error(xhr.statusText);
            };
            xhr.send(null);
        }
    </script>
}