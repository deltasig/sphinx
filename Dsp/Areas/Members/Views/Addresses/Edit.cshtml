@model Dsp.Entities.Address
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Edit Address";
}
<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-inline">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.AddressId)
                    @Html.HiddenFor(model => model.UserId)
                    @Html.HiddenFor(model => model.Type)

                    <p>
                        Modifying "@Model.Type" Address for @Model.Member.FirstName @Model.Member.LastName
                    </p>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "sr-only" })
                        @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control", placeholder = "Address 1" } })
                        @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "sr-only" })
                        @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control", placeholder = "Address 2" } })
                        @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "sr-only" })
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", placeholder = "City" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "sr-only" })
                        @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", placeholder = "State" } })
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "sr-only" })
                        @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Postal Code" } })
                        @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "sr-only" })
                        @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control", placeholder = "Country" } })
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                    </div>
                    <br />
                    <br />
                    <button type="submit" class="btn btn-default">Save</button>
                </div>
            }

        </div>
    </div>
</div>