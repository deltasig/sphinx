@using System.Globalization
@model Dsp.Areas.Scholarships.Models.SubmitScholarshipAppModel
@{
    Layout = "~/Views/Shared/_LayoutExternal.cshtml";
    ViewBag.Title = "Scholarship Submission";
}
@section Title
{
    @Html.Partial("_Title")
}

<div class="container">
    <div class="row">
        @using (Html.BeginForm("Submit", "Applications", new { area = "Scholarships" }, FormMethod.Post, new { }))
        {
            @Html.AntiForgeryToken()
            <div class="col-xs-12">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => Model.Submission.ScholarshipAppId)
                <h2>@Model.App.Title</h2>
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <i class="fa fa-info-circle"></i> General Information
                    </div>
                    <div class="panel-body">
                        <div class="form-group">
                            <div class="row">
                                <div class="col-sm-4 col-xs-12">
                                    @Html.Label("First Name", htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Submission.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <div class="col-sm-4 col-xs-12">
                                    @Html.Label("Last Name", htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Submission.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <div class="col-sm-4 col-xs-12">
                                    @Html.Label("Student #", htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Submission.StudentNumber, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-12">
                                    <p>@Html.ValidationMessageFor(model => model.Submission.FirstName, "", new { @class = "text-danger" })</p>
                                    <p>@Html.ValidationMessageFor(model => model.Submission.LastName, "", new { @class = "text-danger" })</p>
                                    <p>@Html.ValidationMessageFor(model => model.Submission.StudentNumber, "", new { @class = "text-danger" })</p>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                <div class="col-sm-6 col-xs-12">
                                    @Html.Label("Email", htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Submission.Email, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <div class="col-sm-6 col-xs-12">
                                    @Html.Label("Phone #", htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Submission.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-12">
                                    <p>@Html.ValidationMessageFor(model => model.Submission.Email, "", new { @class = "text-danger" })</p>
                                    <p>@Html.ValidationMessageFor(model => model.Submission.PhoneNumber, "", new { @class = "text-danger" })</p>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                <div class="col-sm-3 col-xs-12">
                                    @Html.Label("Address 1", htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Submission.Address1, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <div class="col-sm-2 col-xs-12">
                                    @Html.Label("Address 2", htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Submission.Address2, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <div class="col-sm-2 col-xs-12">
                                    @Html.Label("City", htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Submission.City, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <div class="col-sm-1 col-xs-12">
                                    @Html.Label("State", htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Submission.State, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <div class="col-sm-2 col-xs-12">
                                    @Html.Label("Postal Code", htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Submission.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <div class="col-sm-2 col-xs-12">
                                    @Html.Label("Country", htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Submission.Country, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-12">
                                    <p>@Html.ValidationMessageFor(model => model.Submission.Address1, "", new { @class = "text-danger" })</p>
                                    <p>@Html.ValidationMessageFor(model => model.Submission.Address2, "", new { @class = "text-danger" })</p>
                                    <p>@Html.ValidationMessageFor(model => model.Submission.City, "", new { @class = "text-danger" })</p>
                                    <p>@Html.ValidationMessageFor(model => model.Submission.State, "", new { @class = "text-danger" })</p>
                                    <p>@Html.ValidationMessageFor(model => model.Submission.Country, "", new { @class = "text-danger" })</p>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                <div class="col-sm-4 col-xs-12">
                                    @Html.Label("High School", htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Submission.HighSchool, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <div class="col-sm-4 col-xs-12">
                                    @Html.Label("Act or Sat Score", htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Submission.ActSatScore, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <div class="col-sm-4 col-xs-12">
                                    @Html.Label("High School Gpa", htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Submission.Gpa, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-12">
                                    <p>@Html.ValidationMessageFor(model => model.Submission.HighSchool, "", new { @class = "text-danger" })</p>
                                    <p>@Html.ValidationMessageFor(model => model.Submission.ActSatScore, "", new { @class = "text-danger" })</p>
                                    <p>@Html.ValidationMessageFor(model => model.Submission.Gpa, "", new { @class = "text-danger" })</p>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("How did you hear about this scholarship?", htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Submission.HearAboutScholarship, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Submission.HearAboutScholarship, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <i class="fa fa-pencil"></i> Short Answer Questions
                    </div>
                    <div class="panel-body">
                        @for (var i = 0; i < Model.Answers.Count; i++)
                        {
                            <div class="form-group">
                                @Html.HiddenFor(model => Model.Answers[i].ScholarshipQuestionId)
                                <div class="row">
                                    <div class="col-xs-12">
                                        @{
                                            var maxLength = Model.Answers[i].Question.AnswerMaximumLength;
                                            var label = Model.Answers[i].Question.Prompt.ToString(CultureInfo.InvariantCulture);
                                            var additionalText = "Please keep your response to less than " +
                                                                    maxLength + " characters (around " + maxLength / 5 + " words)";
                                            var appQuestion = Model.App.Questions.Single(ap => ap.ScholarshipQuestionId == Model.Answers[i].ScholarshipQuestionId);
                                            if (!appQuestion.IsOptional)
                                            {
                                                label += " *";
                                            }
                                        }
                                        <h5 class="text-justify"><span class="badge">@(i+1)</span> <strong>@label</strong></h5>

                                        @Html.EditorFor(model => Model.Answers[i].AnswerText, new { htmlAttributes = new
                                        {
                                            @class = "form-control", placeholder = additionalText, style="height: 125px"
                                        } 
                                        })
                                        @Html.ValidationMessageFor(model => Model.Answers[i].AnswerText, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-sm-2 col-sm-offset-5 col-xs-12">
                            <input type="submit" value="Submit" class="btn btn-success btn-block btn-lg" />
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    * Asterisks denote short answers where you are expected to provide a response.
                </div>
            </div>
        }
    </div>

</div>

@section scripts
{
    <script type="text/javascript">
        
    </script>
}