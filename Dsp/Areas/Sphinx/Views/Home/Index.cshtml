@model Dsp.Areas.Dsp.Models.SphinxHomeIndexModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Sphinx";
    var cstZone = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");
    var lastSemesterClasses = Model.MemberInfo.ClassesTaken.Where(c => c.SemesterId == Model.PreviousSemester.SemesterId).ToList();
    var thisSemesterClasses = Model.MemberInfo.ClassesTaken.Where(c => c.SemesterId == Model.CurrentSemester.SemesterId).ToList();
}
@section Title
{
    @Html.Partial("_Title")
}

<div class="container">
    @if (User.IsInRole("Active") || User.IsInRole("Pledge") || User.IsInRole("Neophyte") || User.IsInRole("Administrator"))
    {
        <div class="row">
            <div class="col-xs-12">
                @if (!string.IsNullOrEmpty(ViewBag.Message))
                {
                    <div class="alert alert-warning">
                        @ViewBag.Message
                    </div>
                }
            </div>
        </div>
        <div class="row">
            <!-- LEFT COLUMN -->
            <div class="col-md-5">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        Sober Signups <small class="pull-right">this week</small>
                    </div>
                    @Html.Partial("~/Areas/Sphinx/Views/Sobers/_SoberSchedulePartial.cshtml", Model.SoberSignups)
                </div>

                <div class="panel panel-default">
                    <div class="panel-heading">
                        Laundry Reservations
                        @if (Model.LaundrySummary.Any())
                        {
                            <small class="pull-right">next @Model.LaundrySummary.Count()</small>
                        }
                    </div>
                    <div class="table-responsive">
                        <table class="table">
                            <tbody>
                                @if (Model.LaundrySummary.Any())
                                {

                                    foreach (var signup in Model.LaundrySummary)
                                    {
                                        <tr>
                                            <td>
                                                @TimeZoneInfo.ConvertTimeFromUtc(signup.DateTimeShift, cstZone).ToShortDateString():
                                                @TimeZoneInfo.ConvertTimeFromUtc(signup.DateTimeShift, cstZone).ToShortTimeString() -
                                                @TimeZoneInfo.ConvertTimeFromUtc(signup.DateTimeShift, cstZone).AddHours(2).ToShortTimeString()
                                            </td>
                                            <td>@signup.Member.ToString()</td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="2">None</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

                @if (!lastSemesterClasses.Any() && Model.MemberInfo.PledgeClass.SemesterId == Model.CurrentSemester.SemesterId)
                {
                    <div class="alert alert-warning">
                        <strong>New Member: </strong>You do not appear to have classes entered for last semester.

                        <u>If this is your first semester in college after graduating high school, disregard this message.</u>

                        Otherwise, please go fill out your classes for last semester with the
                        @Html.ActionLink("Classes", "Schedule", "Classes", new { userName = Model.MemberInfo.UserName, area = "Edu" }, null).

                        If you transferred here from another college you attended after graduating high school,
                        you still need to enter your previous semester classes.
                    </div>
                }
            </div>
            <!-- RIGHT COLUMN -->
            <div class="col-md-7">

                <!-- ALERTS -->
                @if (Model.NeedsToSoberDrive && (User.IsInRole("Active") || User.IsInRole("Pledge") || User.IsInRole("Neophyte")))
                {
                    <div class="alert alert-warning delayed" style="display: none;">
                        Please sign up to sober drive at least once!
                        <a href="@Url.Action("Schedule", "Sobers")">
                            Go to Schedule <i class="fa fa-caret-right"></i>
                        </a>
                    </div>
                }
                @if (Model.MemberInfo.Addresses.Any(a => a.Type == "Mailing" && !a.IsFilledOut()))
                {
                    <div class="alert alert-warning delayed" style="display:none;">
                        Please provide your mailing address!
                        <a href="@Url.Action("Index", "Account", new { area = "Members" })">
                            Go to Account <i class="fa fa-caret-right"></i>
                        </a>!
                    </div>
                }
                @if (Model.MemberInfo.PhoneNumbers.Any(a => a.Type == "Mobile" && string.IsNullOrEmpty(a.Number)))
                {
                    <div class="alert alert-warning delayed" style="display:none;">
                        Please provide your mobile phone number!
                        <a href="@Url.Action("Index", "Account", new { area = "Members" })">
                            Go to Account <i class="fa fa-caret-right"></i>
                        </a>!
                    </div>
                }
                @if (lastSemesterClasses.Any() && lastSemesterClasses.Any(c => string.IsNullOrEmpty(c.FinalGrade)))
                {
                    <div class="alert alert-warning delayed" style="display:none;">
                        You have not reported all of your grades for last semester!
                        <a href="@Url.Action("Transcript", "Classes", new { area = "Edu", userName = Model.MemberInfo.UserName })">
                            Go to Transcript <i class="fa fa-caret-right"></i>
                        </a>
                    </div>
                }
                @if (!thisSemesterClasses.Any())
                {
                    <div class="alert alert-warning delayed" style="display:none;">
                        You have not entered your courses for this semester!
                        <a href="@Url.Action("Schedule", "Classes", new { userName = Model.MemberInfo.UserName, area = "Edu" })">
                            Go to Class Schedule <i class="fa fa-caret-right"></i>
                        </a>
                    </div>
                }
                @if (!Model.MemberInfo.MajorsToMember.Any())
                {
                    <div class="alert alert-warning delayed" style="display:none;">
                        Please report your major! <a href="@Url.Action("Index", "Account", new { area = "Members" })">
                            Go to Account <i class="fa fa-caret-right"></i>
                        </a>
                    </div>
                }

                <!-- SERVICE HOURS -->
                <h3>
                    Your Service Hours
                    <small>
                        @{
                var labelColor = "label-default";
                var approvedHours = 0.0;
                if (Model.CompletedEvents.Any())
                {
                    approvedHours = Model.CompletedEvents.Where(e => e.Event.IsApproved).Sum(h => h.DurationHours);
                    if (approvedHours >= Model.CurrentSemester.MinimumServiceHours)
                    {
                        labelColor = "label-success";
                    }
                }
                        }
                        @Model.CurrentSemester
                        <span class="label @labelColor label-as-badge">
                            @approvedHours / @Model.CurrentSemester.MinimumServiceHours
                        </span>
                    </small>
                    <small class="hidden-xs pull-right">
                        @Html.ActionLink("Submit Hours", "Submit", "Hours", new { area = "Service" }, new { @class = "btn btn-sm btn-success" })
                        @Html.ActionLink("Events", "Index", "Events", new { area = "Service" }, new { @class = "btn btn-sm btn-success" })
                    </small>
                    <small class="visible-xs">
                        @Html.ActionLink("Submit Hours", "Submit", "Hours", new { area = "Service" }, new { @class = "btn btn-sm btn-success" })
                        @Html.ActionLink("Events", "Index", "Events", new { area = "Service" }, new { @class = "btn btn-sm btn-success" })
                    </small>
                </h3>
                @if (!Model.CompletedEvents.Any())
                {
                    <p class="text-danger">No service hours submitted</p>
                }
                else
                {
                    <table class="table table-condensed table-striped table-responsive">
                        <thead>
                            <tr>
                                <th>Event</th>
                                <th>Date</th>
                                <th>Hours</th>
                                <th>
                                    Approved
                                    <a data-toggle="tooltip" data-placement="top"
                                       title="Hours submitted for events not yet approved by the Service Chairman don't count towards your semester requirement.">
                                        <i class="fa fa-info-circle"></i>
                                    </a>
                                </th>
                            </tr>
                        </thead>
                        @foreach (var item in Model.CompletedEvents.OrderBy(e => e.Event.DateTimeOccurred))
                        {
                            <tr>
                                <td>@item.Event.EventName</td>
                                <td>@item.Event.DateTimeOccurred.ToShortDateString()</td>
                                <td>@item.DurationHours</td>
                                <td>@Html.DisplayFor(modelItem => item.Event.IsApproved)</td>
                            </tr>
                        }
                    </table>
                }
            </div>
        </div>
    }
    else if (User.IsInRole("Alumnus"))
    {
        <div class="row">
            <div class="col-sm-5">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        Sober Signups <small class="pull-right">this week</small>
                    </div>
                    @Html.Partial("~/Areas/Sphinx/Views/Sobers/_SoberSchedulePartial.cshtml", Model.SoberSignups)
                </div>
            </div>
            <div class="col-sm-7">
                @if (Model.MemberInfo.Addresses.Any(a => a.Type == "Mailing" && !a.IsFilledOut()))
                {
                    <div class="alert alert-warning">
                        Please enter your mailing address on your <a href="@Url.Action("Index", "Account", new { area = "Admin" })">Account page</a>!
                    </div>
                }
                @if (Model.MemberInfo.PhoneNumbers.Any(a => a.Type == "Mobile" && string.IsNullOrEmpty(a.Number)))
                {
                    <div class="alert alert-warning">
                        Please enter your mobile phone number on your <a href="@Url.Action("Index", "Account", new { area = "Admin" })">Account page</a>!
                    </div>
                }
                <p>More Alumni content is forthcoming.</p>
            </div>
        </div>
    }
    else if (User.IsInRole("Affiliate"))
    {
        <p>Affiliate content is forthcoming.</p>
    }
</div>

@section scripts
{
    <script type="text/javascript">

        $(function () {
            $(".delayed").delay(1000).show(500);
        });

    </script>
}