@model Dsp.Entities.ServiceEvent
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Create New Event";
}
@section styles {
    @Styles.Render("~/content/datetimepicker")
}

<div class="container-fluid">
    <div class="row">
        <div class="col-xs-12">
            <p>
                <a href="@Url.Action("Index", new { s = ViewBag.SemesterId })" class="btn btn-sm btn-default">
                    <i class="fa fa-caret-left"></i> Back to Events
                </a>
            </p>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.DateTimeOccurred, htmlAttributes: new { @class = "control-label" })
                    <div class='input-group date' id='dtp'>
                        @Html.EditorFor(m => m.DateTimeOccurred, new { htmlAttributes = new { @class = "form-control", type = "datetime" } })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.DateTimeOccurred, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EventName, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.EventName, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.EventName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DurationHours, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.DurationHours, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.DurationHours, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            }
        </div>
        <div class="col-sm-6">
            <div class="alert alert-warning">
                <strong>Event Approval</strong>
                <hr />
                <p>
                    Anyone can create an event in Sphinx.

                    However, be aware that an event must be approved by the Service Chairman before any service hours submitted for that event count towards
                    the semester minimum requirement.

                    Events created by the Service Chairman are approved by default.
                </p>
            </div>
        </div>
    </div>
</div>

@section scripts {
    @Scripts.Render("~/bundles/datetimepicker")
    <script type="text/javascript">
        $(function () {
            $('#dtp').datetimepicker();
        });
    </script>
}
