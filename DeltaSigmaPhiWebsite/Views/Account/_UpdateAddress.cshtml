@model DeltaSigmaPhiWebsite.Models.Address

@{
    ViewBag.Title = "Update Address";
}

<div class="panel panel-default">
    <div class="panel-heading">Update Address</div>
    <div class="panel-body">
        @using (Html.BeginForm("UpdateAddress", "Account", FormMethod.Post, new { role = "form" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.UserId)
            @Html.HiddenFor(model => model.AddressId)

            <div class="form-group">
                @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control" } })
                <p class="text-warning">
                    @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
                </p>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                <p class="text-warning">
                    @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                </p>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                <p class="text-warning">
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </p>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                <p class="text-warning">
                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                </p>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                <p class="text-warning">
                    @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                </p>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })

                <p class="text-warning">
                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                </p>
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-success">Submit</button>
            </div>
        }
    </div>
</div>