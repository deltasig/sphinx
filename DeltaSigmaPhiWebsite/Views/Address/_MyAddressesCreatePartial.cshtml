@model CreateAddressModel

@{

    var types = new List<object>
    {
        new { Type = "Mailing"},
        new { Type = "Permanent" }
    };
    var addressTypes = new SelectList(types, "Type", "Type");
}

<div class="modal fade" id="addressCreateModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Create Address Form</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Create", "Address", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                    @Html.HiddenFor(model => model.Address.UserId)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address.Type, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.Address.Type, addressTypes, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Address.Type, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address.Address1, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Address.Address1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address.Address1, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address.Address2, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Address.Address2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address.Address2, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address.City, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Address.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address.City, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address.State, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Address.State, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address.State, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address.PostalCode, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Address.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address.PostalCode, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address.Country, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Address.Country, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address.Country, "", new { @class = "text-danger" })
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-success">Submit</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
