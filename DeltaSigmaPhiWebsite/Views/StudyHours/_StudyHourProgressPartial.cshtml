@model ProgressModel

<div class="table-responsive">
    <table class="table table-condensed">
        <thead>
            <tr>
                <th>Name</th>
                <th>Required Hours</th>
                <th>Total Submitted Hours</th>
                <th>Approved Hours</th>
                @if(User.IsInRole("Administrator") || User.IsInRole("Academics"))
                {
                    <th>Potential Fine</th>
                }
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Members.OrderBy(m => m.RequiredStudyHours).ThenBy(m => m.FirstName))
            {
                var totalUnproctored = item.SubmittedStudyHours.Where(m => m.ApproverId != null && !m.IsProctored && m.DateTimeStudied >= Model.StartDate).Sum(s => s.DurationHours);
                var totalProctored = item.SubmittedStudyHours.Where(m => m.ApproverId != null && m.IsProctored && m.DateTimeStudied >= Model.StartDate).Sum(s => s.DurationHours);
                <tr>
                    <td>
                        @item.ToString()
                    </td>
                    <td>
                        @item.RequiredStudyHours |
                        @item.ProctoredStudyHours
                    </td>
                    <td>
                        @item.SubmittedStudyHours.Where(m => !m.IsProctored && m.DateTimeStudied >= Model.StartDate).Sum(s => s.DurationHours) |
                        @item.SubmittedStudyHours.Where(m => m.IsProctored && m.DateTimeStudied >= Model.StartDate).Sum(s => s.DurationHours)
                    </td>
                    <td>
                        @item.SubmittedStudyHours.Where(m => m.ApproverId != null && !m.IsProctored && m.DateTimeStudied >= Model.StartDate).Sum(s => s.DurationHours) |
                        @item.SubmittedStudyHours.Where(m => m.ApproverId != null && m.IsProctored && m.DateTimeStudied >= Model.StartDate).Sum(s => s.DurationHours)
                    </td>
                    @if (User.IsInRole("Administrator") || User.IsInRole("Academics"))
                    {
                        <td>
                            $@if(item.RequiredStudyHours - totalUnproctored + item.ProctoredStudyHours - totalProctored <= 0)
                             {
                                 @:0
                             }
                             else
                             {
                                 @((item.RequiredStudyHours - totalUnproctored + item.ProctoredStudyHours - totalProctored)*5)
                             }
                        </td>
                    }
                    <td>
                        @if (User.IsInRole("Administrator") || User.IsInRole("Academics"))
                        {
                            @Html.ActionLink("Edit", "Edit", "Account", new { userName = item.UserName }, new { })
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
