@model LaundrySignupModel
@{
    ViewBag.Title = "Laundry Signup";
}

<div class="container">
    <div class="page-header">
        <div class="row">
            <div class="col-lg-12">
                <h1>@ViewBag.Title</h1>
                <p class="text-success">@ViewBag.SuccessMessage</p>
                <p class="text-warning">@ViewBag.FailMessage</p>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <!-- Table Begins Here -->
    <table class="table table-responsive table-striped table-condensed" style="text-align:center">

        <!-- Top row of cells, days of the week displayed-->
        @if (Model.ThisWeeksSignups.Count > 0) //<!-- Check to make sure timeSlotOverWeek[0] exists -->
        {
            <thead>
                <tr>
                    <th class="text-center">Time Slot</th>
                    @foreach (var timeSlot in Model.ThisWeeksSignups[0])
                    {
                        <th class="text-center">@timeSlot.Shift.DayOfWeek</th>
                    }
                </tr>
            </thead>
        }
        @foreach (var timeSlotOverWeek in Model.ThisWeeksSignups.Where(timeSlotOverWeek => timeSlotOverWeek.Count > 0))
        {
            <tr>
                <!-- show time slot(left most column) -->
                <td>
                    <h6> @timeSlotOverWeek[0].Shift.Hour:00 - @((timeSlotOverWeek[0].Shift + new TimeSpan(2, 0, 0)).Hour):00</h6>
                </td>

                @foreach (var timeSlot in timeSlotOverWeek)
                {
                    @:<!-- here goes the use of the timeSlot object -->
                    <td>

                        <!-- if in past  -->
                        <!-- ignore -->
                        @{
                    if ((timeSlot.Shift + new TimeSpan(1, 0, 0)) < DateTime.Now)
                    {
                        <div class="text-center">
                            <!-- Nothing! -->
                        </div>
                    }
                    //<!-- if time slot is reserved (aka name not NULL)(either by user or someone else) -->
                    else
                    {
                        if (timeSlot.Name != null)
                        {
                            //<!-- if reserved by user -->
                            //<!-- allow user to cancel -->
                            if (User.Identity.Name == timeSlot.UserName)
                            {
                                using (Html.BeginForm("CancelReserveLaundry", "Sphinx", new DeltaSigmaPhiWebsite.Models.LaundryReservationModel { Shift = timeSlot.Shift, UserId = 0, UserName = User.Identity.Name }))
                                {
                                    <button type="submit" class="btn btn-sm btn-danger">Cancel</button>
                                }
                            }
                            //<!-- else if reserved by someone else -->
                            //<!-- write name -->
                            else
                            {
                                <div class="text-center">
                                    <h4>@timeSlot.Name</h4>
                                </div>
                            }
                        }
                        //<!-- else no one has reserved time slot -->
                        //<!-- button for reservation -->
                        else
                        {
                            @:<!-- Enable the user to reserve the time slot -->
                                using (Html.BeginForm("ReserveLaundry", "Sphinx", new DeltaSigmaPhiWebsite.Models.LaundryReservationModel { Shift = timeSlot.Shift, UserName = User.Identity.Name }))
                                {
                                    <button type="submit" class="btn btn-sm btn-success">Open</button>
                                }
                        }
                    }
                        }
                    </td>
                }
            </tr>
        }
    </table>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}