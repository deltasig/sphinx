@model SphinxModel

@{
    ViewBag.Title = "Sphinx";
    var cstZone = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");
}

@section Title
{
    @Html.Partial("_Title")
}

<div class="container">
    @if (User.IsInRole("Active") || User.IsInRole("Pledge") || User.IsInRole("Neophyte") || User.IsInRole("Administrator"))
    {
        <div class="row">
            <div class="col-xs-12">
                @if (!string.IsNullOrEmpty(ViewBag.Message))
                {
                    <div class="alert alert-warning">
                        @ViewBag.Message
                    </div>
                }
            </div>
        </div>
        <div class="row">
            <div class="col-md-7">
                <!-- Service Hours Sections-->
                <h3>Your Service Hours <small>this semester</small></h3>
                @if (Model.NeedsToSoberDrive)
                {
                    <div class="alert alert-warning">
                        You haven't signed up to sober drive!  <a href="@Url.Action("SoberSchedule", "Sphinx")">Sign up</a>
                    </div>
                }
                @if (!Model.CompletedEvents.Any() && Model.NeedsToSoberDrive)
                {
                    <p>No service hours submitted</p>
                }
                else
                {
                    <table class="table table-condensed table-striped table-responsive">
                        <thead>
                            <tr>
                                <th>Event</th>
                                <th>Date</th>
                                <th>Hours</th>
                            </tr>
                        </thead>
                        @foreach (var item in Model.CompletedEvents.OrderBy(e => e.Event.DateTimeOccurred))
                        {
                            <tr>
                                <td>@item.Event.EventName</td>
                                <td>@item.Event.DateTimeOccurred.ToShortDateString()</td>
                                <td>@item.DurationHours</td>
                            </tr>
                        }
                    </table>
                }
                @if (Model.MemberInfo.RequiredStudyHours > 0)
                {
                    <h3>Your Study Hours <small>this week</small></h3>
                    if (!Model.StudyHours.Any())
                    {
                        <p>You haven't turned in any study hours yet for approval. >:O</p>
                    }
                    else
                    {
                        <table class="table table-condensed table-striped table-responsive">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Proctored</th>
                                    <th>Approver</th>
                                    <th>Hours</th>
                                </tr>
                            </thead>
                            @foreach (var studyHour in Model.StudyHours)
                            {
                                <tr>
                                    <td>@studyHour.DateTimeStudied.ToShortDateString()</td>
                                    <td>@Html.DisplayFor(modelItem => studyHour.IsProctored)</td>
                                    <td>
                                        @if (studyHour.Approver == null)
                                        {
                                            @: None
                                        }
                                        else
                                        {
                                            @studyHour.Approver.ToString()
                                        }
                                    </td>
                                    <td>@studyHour.DurationHours</td>
                                </tr>
                            }
                        </table>
                    }
                }
            </div>
            <div class="col-md-5">
                <div class="">
                    <button class="btn btn-default btn-lg" data-toggle="modal" data-target="#serviceHourModal" data-placement="top"
                            title="These are your remaining required service hours for this semester." id="serviceHourModalToggle">
                        <span class="badge" style="font-weight: normal !important">
                            @Model.RemainingCommunityServiceHours
                        </span>
                        <span>Serve</span>
                    </button>
                    @if (Model.MemberInfo.RequiredStudyHours > 0 || Model.MemberInfo.ProctoredStudyHours > 0)
                    {
                        <button class="btn btn-default btn-lg" data-toggle="modal" data-target="#studyHourModal" data-placement="top"
                                title="These are your remaining study hours this week (Unproctored | Proctored)." id="studyHourModalToggle">
                            <span class="badge" style="font-weight: normal !important">
                                @Model.RemainingStudyHours | @Model.RemainingProctoredStudyHours
                            </span>
                            <span>Study</span>
                        </button>
                    }
                </div>

                <br />
                <br />
                @{ Html.RenderAction("Submit", "ServiceHours"); }
                @{ Html.RenderAction("Submit", "StudyHours"); }

                @Html.Partial("_SoberSchedulePartial", Model.SoberSignups)

                <table class="table table-condensed table-responsive">
                    <thead>
                        <tr>
                            <th colspan="2">Upcoming Laundry Reservations</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.LaundrySummary.Any())
                        {

                            foreach (var signup in Model.LaundrySummary)
                            {
                                <tr>
                                    <td>
                                        @TimeZoneInfo.ConvertTimeFromUtc(signup.DateTimeShift, cstZone).ToShortDateString():
                                        @TimeZoneInfo.ConvertTimeFromUtc(signup.DateTimeShift, cstZone).ToShortTimeString() -
                                        @TimeZoneInfo.ConvertTimeFromUtc(signup.DateTimeShift, cstZone).AddHours(2).ToShortTimeString()
                                    </td>
                                    <td>@signup.Member.ToString()</td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="2">No reservations this week.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
    else if (User.IsInRole("Alumnus"))
    {
        <div class="col-sm-7">
            <p>Alumni content is forthcoming.</p>
        </div>
        <div class="col-sm-5">
            @Html.Partial("_SoberSchedulePartial", Model.SoberSignups)
        </div>
    }
    else if (User.IsInRole("Affiliate"))
    {
        <p>Affiliate content is forthcoming.</p>
    }
</div>

@section scripts
{
    <script type="text/javascript">

        $(function () {
            $('#serviceHourModalToggle').tooltip();
            $("#studyHourModalToggle").tooltip();
        });

    </script>
}