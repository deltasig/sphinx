@model SphinxModel

@{
    ViewBag.Title = "Sphinx";
    var cstZone = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");
}

@section Title
{
    @Html.Partial("_Title")
}

<div class="container">
    @if (User.IsInRole("Active") || User.IsInRole("Pledge") || User.IsInRole("Neophyte") || User.IsInRole("Administrator"))
    {
        <div class="row">
            <div class="col-xs-12">
                @if (!string.IsNullOrEmpty(ViewBag.Message))
                {
                    <div class="alert alert-warning">
                        @ViewBag.Message
                    </div>
                }
            </div>
        </div>
        <div class="row">
            <div class="col-md-5">
                <button class="btn btn-default btn-lg" data-toggle="modal" data-target="#serviceHourModal" data-placement="top"
                        title="These are your remaining required service hours for this semester." id="serviceHourModalToggle">
                    <span class="badge" style="font-weight: normal !important">
                        @Model.RemainingCommunityServiceHours
                    </span>
                    <span>Serve</span>
                </button>
                
                <hr/>

                @{ Html.RenderAction("Submit", "ServiceHours"); }
                
                <ul class="nav nav-tabs nav-justified" role="tablist">
                    <li class="active"><a href="#soberschedule" data-toggle="pill">Sober Schedule</a></li>
                    <li><a href="#mysignups" data-toggle="pill">My Sober Schedule</a></li>
                </ul>
                <div class="tab-content">
                    <div class="tab-pane active" id="soberschedule">
                        @Html.Partial("_SoberSchedulePartial", Model.SoberSignups)
                    </div>
                    <div class="tab-pane" id="mysignups">
                        @if (!Model.NeedsToSoberDrive)
                        {
                            <div class="table-responsive">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th colspan="3"><small>This Semester</small></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.MemberInfo.SoberSignups
                                            .Where(s => s.DateOfShift >= Model.PreviousSemester.DateStart).OrderByDescending(o => o.DateOfShift))
                                        {
                                            <tr>
                                                <td>@item.Type</td>
                                                <td>@item.DateOfShift.DayOfWeek.ToString().Substring(0, 3)</td>
                                                <td>@item.DateOfShift.ToShortDateString()</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-warning">
                                You haven't signed up to sober drive!  <a href="@Url.Action("SoberSchedule", "Sphinx")">Sign up</a>
                            </div>
                        }
                    </div>
                </div>

                <div class="panel panel-default">
                    <div class="panel-heading">Upcoming Laundry Reservations</div>
                    <div class="table-responsive">
                        <table class="table">
                            <tbody>
                                @if (Model.LaundrySummary.Any())
                                {

                                    foreach (var signup in Model.LaundrySummary)
                                    {
                                        <tr>
                                            <td>
                                                @TimeZoneInfo.ConvertTimeFromUtc(signup.DateTimeShift, cstZone).ToShortDateString():
                                                @TimeZoneInfo.ConvertTimeFromUtc(signup.DateTimeShift, cstZone).ToShortTimeString() -
                                                @TimeZoneInfo.ConvertTimeFromUtc(signup.DateTimeShift, cstZone).AddHours(2).ToShortTimeString()
                                            </td>
                                            <td>@signup.Member.ToString()</td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="2">No reservations this week.</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="col-md-7">
                @if (Model.NeedsToSoberDrive)
                {
                    <div class="alert alert-warning">
                        You haven't signed up to sober drive!  <a href="@Url.Action("SoberSchedule", "Sphinx")">Sign up</a>
                    </div>
                }
                @if (Model.MemberInfo.Addresses.Any(a => a.Type == "Mailing" && !a.IsFilledOut()))
                {
                    <div class="alert alert-warning">
                        Please enter your mailing address on your <a href="@Url.Action("Index", "Account")">Account page</a>!
                    </div>
                }
                @if (Model.MemberInfo.PhoneNumbers.Any(a => a.Type == "Mobile" && string.IsNullOrEmpty(a.Number)))
                {
                    <div class="alert alert-warning">
                        Please enter your mobile phone number on your <a href="@Url.Action("Index", "Account")">Account page</a>!
                    </div>
                }
                <!-- Service Hours Sections-->
                <h3>Your Service Hours <small>this semester</small></h3>
                @if (!Model.CompletedEvents.Any() && Model.NeedsToSoberDrive)
                {
                    <p>No service hours submitted</p>
                }
                else
                {
                    <table class="table table-condensed table-striped table-responsive">
                        <thead>
                            <tr>
                                <th>Event</th>
                                <th>Date</th>
                                <th>Hours</th>
                            </tr>
                        </thead>
                        @foreach (var item in Model.CompletedEvents.OrderBy(e => e.Event.DateTimeOccurred))
                        {
                            <tr>
                                <td>@item.Event.EventName</td>
                                <td>@item.Event.DateTimeOccurred.ToShortDateString()</td>
                                <td>@item.DurationHours</td>
                            </tr>
                        }
                    </table>
                }
                @if (Model.MemberStudyHourAssignments.Any())
                {
                    <h3>Your Study Hour Assignments <small>this semester</small></h3>
                    <table class="table table-condensed">
                        <thead>
                            <tr>
                                <th>Assignment</th>
                                <th>Unproctored</th>
                                <th>Proctored</th>
                                <th></th>
                            </tr>
                        </thead>
                        @foreach (var item in Model.MemberStudyHourAssignments.OrderByDescending(a => a.Assignment.Start))
                        {
                            var start = TimeZoneInfo.ConvertTimeFromUtc(item.Assignment.Start, cstZone);
                            var end = TimeZoneInfo.ConvertTimeFromUtc(item.Assignment.End, cstZone);
                            var rowColor = "";
                            if (DateTime.UtcNow >= item.Assignment.Start && DateTime.UtcNow <= item.Assignment.End)
                            {
                                rowColor = "success";
                            }
                            else if (DateTime.UtcNow < item.Assignment.Start)
                            {
                                rowColor = "active";
                            }

                            <tr class="@rowColor">
                                <td>
                                    @Html.ActionLink(start + " to " + end, "AssignmentInfo", "StudyHours", new { id = item.MemberStudyHourAssignmentId }, null)
                                </td>
                                <td>
                                    @item.TurnIns.Where(s => !s.IsProctored).Sum(a => a.DurationHours) /
                                    @item.UnproctoredAmount
                                </td>
                                <td>
                                    @item.TurnIns.Where(s => s.IsProctored).Sum(a => a.DurationHours) /
                                    @item.ProctoredAmount
                                </td>
                                <td>
                                    @Html.ActionLink("Submit", "Submit", "StudyHours", new { id = item.MemberStudyHourAssignmentId }, null)
                                </td>
                            </tr>
                        }
                    </table>
                }
            </div>
        </div>
    }
    else if (User.IsInRole("Alumnus"))
    {
        <div class="col-sm-5">
            @Html.Partial("_SoberSchedulePartial", Model.SoberSignups)
        </div>
        <div class="col-sm-7">
            @if (Model.MemberInfo.Addresses.Any(a => a.Type == "Mailing" && !a.IsFilledOut()))
            {
                <div class="alert alert-warning">
                    Please enter your mailing address on your <a href="@Url.Action("Index", "Account")">Account page</a>!
                </div>
            }
            @if (Model.MemberInfo.PhoneNumbers.Any(a => a.Type == "Mobile" && string.IsNullOrEmpty(a.Number)))
            {
                <div class="alert alert-warning">
                    Please enter your mobile phone number on your <a href="@Url.Action("Index", "Account")">Account page</a>!
                </div>
            }
            <p>More Alumni content is forthcoming.</p>
        </div>
    }
    else if (User.IsInRole("Affiliate"))
    {
        <p>Affiliate content is forthcoming.</p>
    }
</div>

@section scripts
{
    <script type="text/javascript">

        $(function () {
            $('#serviceHourModalToggle').tooltip();
            $("#studyHourModalToggle").tooltip();
        });

    </script>
}