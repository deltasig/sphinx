@model DeltaSigmaPhiWebsite.Entities.StudyAssignment
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Assignment Details";
    var cstZone = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");
}
@section Title
{
    @Html.Partial("_Title")
}
<div class="container">
    <div class="row">
        <div class="col-xs-12">
            <p>
                <a href="@Url.Action("Info", "Periods", new { id = Model.PeriodId })" class="btn btn-sm btn-default">
                    <i class="fa fa-caret-left"></i> Back to Study Period
                </a>
            </p>
        </div>
    </div>
    <div class="row">
        <div class="col-xs-12">
            <div class="form-group">
                <dl class="dl-horizontal">
                    <dt>Assignee</dt>
                    <dd>@Model.AssignedMember.FirstName @Model.AssignedMember.LastName</dd>
                    <dt>Start Date/Time</dt>
                    <dd>@TimeZoneInfo.ConvertTimeFromUtc(Model.Period.Start, cstZone)</dd>
                    <dt>End Date/Time</dt>
                    <dd>@TimeZoneInfo.ConvertTimeFromUtc(Model.Period.End, cstZone)</dd>
                </dl>
            </div>
            
            <div class="form-group">
                <table data-toggle="table" data-classes="table table-condensed">
                    <thead>
                        <tr>
                            <th class="col-sm-4">
                                <small>
                                    Type
                                </small>
                            </th>
                            <th class="col-sm-2">
                                <small>Required Hours</small>
                            </th>
                            <th class="col-sm-2">
                                <small>
                                    Total Submitted 
                                    <i class="fa fa-info-circle text-info" 
                                       data-toggle="tooltip" data-placement="top" title="Approved | Unapproved"></i>
                                </small>
                            </th>
                            <th class="col-sm-2">
                                <small>
                                    Submitted (on time) 
                                    <i class="fa fa-info-circle text-info" 
                                       data-toggle="tooltip" data-placement="top" title="Approved | Unapproved"></i>
                                </small>
                            </th>
                            <th class="col-sm-2">
                                <small>
                                    Submitted (late) 
                                    <i class="fa fa-info-circle text-info" 
                                       data-toggle="tooltip" data-placement="top" title="Approved | Unapproved"></i>
                                </small>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            var unproctoredHours = Model.TurnIns.Where(h => !h.IsProctored).ToList();
                            var unproctoredHoursSum = unproctoredHours.Sum(h => h.DurationHours);
                            var proctoredHours = Model.TurnIns.Where(h => h.IsProctored).ToList();
                            var proctoredHoursSum = proctoredHours.Sum(h => h.DurationHours);
                            
                            var approvedUnproctoredHours = unproctoredHours.Where(h => h.DateTimeApproved != null).ToList();
                            var approvedUnproctoredHoursSum = approvedUnproctoredHours.Sum(h => h.DurationHours);
                            var approvedProctoredHours = proctoredHours.Where(h => h.DateTimeApproved != null).ToList();
                            var approvedProctoredHoursSum = approvedProctoredHours.Sum(h => h.DurationHours);
                            var unapprovedUnproctoredHours = unproctoredHours.Where(h => h.DateTimeApproved == null).ToList();
                            var unapprovedUnproctoredHoursSum = unapprovedUnproctoredHours.Sum(h => h.DurationHours);
                            var unapprovedProctoredHours = proctoredHours.Where(h => h.DateTimeApproved == null).ToList();
                            var unapprovedProctoredHoursSum = unapprovedProctoredHours.Sum(h => h.DurationHours);
                            
                            var approvedUnproctoredHoursOnTime = approvedUnproctoredHours.Where(h => h.DateTimeSubmitted <= Model.Period.End).ToList();
                            var approvedUnproctoredHoursOnTimeSum = approvedUnproctoredHoursOnTime.Sum(h => h.DurationHours);
                            var approvedProctoredHoursOnTime = approvedProctoredHours.Where(h => h.DateTimeSubmitted <= Model.Period.End).ToList();
                            var approvedProctoredHoursOnTimeSum = approvedProctoredHoursOnTime.Sum(h => h.DurationHours);
                            var unapprovedUnproctoredHoursOnTime = unapprovedUnproctoredHours.Where(h => h.DateTimeSubmitted <= Model.Period.End).ToList();
                            var unapprovedUnproctoredHoursOnTimeSum = unapprovedUnproctoredHoursOnTime.Sum(h => h.DurationHours);
                            var unapprovedProctoredHoursOnTime = unapprovedProctoredHours.Where(h => h.DateTimeSubmitted <= Model.Period.End).ToList();
                            var unapprovedProctoredHoursOnTimeSum = unapprovedProctoredHoursOnTime.Sum(h => h.DurationHours);
                            
                            var approvedUnproctoredHoursLate = approvedUnproctoredHours.Where(h => h.DateTimeSubmitted > Model.Period.End).ToList();
                            var approvedUnproctoredHoursLateSum = approvedUnproctoredHoursLate.Sum(h => h.DurationHours);
                            var approvedProctoredHoursLate = approvedProctoredHours.Where(h => h.DateTimeSubmitted > Model.Period.End).ToList();
                            var approvedProctoredHoursLateSum = approvedProctoredHoursLate.Sum(h => h.DurationHours);
                            var unapprovedUnproctoredHoursLate = unapprovedUnproctoredHours.Where(h => h.DateTimeSubmitted > Model.Period.End).ToList();
                            var unapprovedUnproctoredHoursLateSum = unapprovedUnproctoredHoursLate.Sum(h => h.DurationHours);
                            var unapprovedProctoredHoursLate = unapprovedProctoredHours.Where(h => h.DateTimeSubmitted > Model.Period.End).ToList();
                            var unapprovedProctoredHoursLateSum = unapprovedProctoredHoursLate.Sum(h => h.DurationHours);
                        }
                        <tr class="">
                            <td>Unproctored </td>
                            <td><span class="badge">@Model.UnproctoredAmount</span></td>
                            <td>
                                <span class="badge">
                                    @approvedUnproctoredHoursSum 
                                    <i class="fa fa-long-arrow-left"></i>
                                    @unapprovedUnproctoredHoursSum
                                </span>
                            </td>
                            <td>
                                <span class="badge">
                                    @approvedUnproctoredHoursOnTimeSum
                                    <i class="fa fa-long-arrow-left"></i>
                                    @unapprovedUnproctoredHoursOnTimeSum
                                </span>
                            </td>
                            <td>
                            <span class="badge">
                                @approvedUnproctoredHoursLateSum
                                <i class="fa fa-long-arrow-left"></i>
                                @unapprovedUnproctoredHoursLateSum
                            </span>
                        </tr>
                        <tr class="">
                            <td>Proctored</td>
                            <td><span class="badge">@Model.ProctoredAmount</span></td>
                            <td>
                                <span class="badge">
                                    @approvedProctoredHoursSum
                                    <i class="fa fa-long-arrow-left"></i>
                                    @unapprovedProctoredHoursSum
                                </span>
                            </td>
                            <td>
                                <span class="badge">
                                    @approvedProctoredHoursOnTimeSum
                                    <i class="fa fa-long-arrow-left"></i>
                                    @unapprovedProctoredHoursOnTimeSum
                                </span>
                            </td>
                            <td>
                                <span class="badge">
                                    @approvedProctoredHoursLateSum
                                    <i class="fa fa-long-arrow-left"></i>
                                    @unapprovedProctoredHoursLateSum
                                </span>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@section scripts
{
    <script>
        $(function () {
            $('[data-toggle="tooltip"]').tooltip();
        })
    </script>
}
