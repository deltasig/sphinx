@model IEnumerable<DeltaSigmaPhiWebsite.Entities.WorkOrder>
@using DeltaSigmaPhiWebsite.Areas.House.Models;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Work Orders";
    var filter = new WorkOrderIndexModel
    {
        page = ViewBag.Page,
        open = ViewBag.Open,
        closed = ViewBag.Closed,
        sort = ViewBag.Sort,
        s = ViewBag.CurrentFilter
    };
    var sortNewestFilter = new WorkOrderIndexModel(filter);
    var sortOldestFilter = new WorkOrderIndexModel(filter);
    var sortMostCommentedFilter = new WorkOrderIndexModel(filter);
    var sortLeastCommentedFilter = new WorkOrderIndexModel(filter);
    var sortRecentlyUpdatedFilter = new WorkOrderIndexModel(filter);
    var sortLeastRecentlyUpdatedFilter = new WorkOrderIndexModel(filter);
    var pagePreviousFilter = new WorkOrderIndexModel(filter);
    var pageNextFilter = new WorkOrderIndexModel(filter);
    var openFilter = new WorkOrderIndexModel(filter);
    var closedFilter = new WorkOrderIndexModel(filter);

    const string newestSortText = "newest";
    const string oldestSortText = "oldest";
    const string mostCommentedSortText = "most-commented";
    const string leastCommentedSortText = "least-commented";
    const string recentlyUpdatedSortText = "recently-updated";
    const string leastRecentlyUpdatedSortText = "least-recently-updated";

    sortNewestFilter.sort = filter.sort == newestSortText ? "" : newestSortText;
    sortOldestFilter.sort = filter.sort == oldestSortText ? "" : oldestSortText;
    sortMostCommentedFilter.sort = filter.sort == mostCommentedSortText ? "" : mostCommentedSortText;
    sortLeastCommentedFilter.sort = filter.sort == leastCommentedSortText ? "" : leastCommentedSortText;
    sortRecentlyUpdatedFilter.sort = filter.sort == recentlyUpdatedSortText ? "" : recentlyUpdatedSortText;
    sortLeastRecentlyUpdatedFilter.sort = filter.sort == leastRecentlyUpdatedSortText ? "" : leastRecentlyUpdatedSortText;
    pagePreviousFilter.page = filter.page - 1;
    pageNextFilter.page = filter.page + 1;
    openFilter.open = !filter.open;
    closedFilter.closed = !filter.closed;
}

@section Title
{
    @Html.Partial("_Title")
}

<div class="container">
    <div class="row row-space">
        <div class="col-sm-4">
            <div class="btn-group" role="group" aria-label="...">
                @Html.ActionLink("Open", "Index", "WorkOrders", openFilter, new
                {
                    @class = "btn btn-default " + (ViewBag.Title == "WorkOrders" ? "active" : "") + (ViewBag.Open ? " active" : "")
                })
                @Html.ActionLink("Closed", "Index", "WorkOrders", closedFilter, new
                {
                    @class = "btn btn-default " + (ViewBag.Title == "WorkOrders" ? "active" : "") + (ViewBag.Closed ? " active" : "")
                })
            </div>
        </div>
        <div class="col-sm-4 text-right">
            @using (Html.BeginForm("Index", "WorkOrders", FormMethod.Get, new { @class = "form-inline" }))
            {
                <div class="form-group">
                    <div class="dropdown">
                        <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-expanded="true">
                            Sort <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu1">
                            <li role="presentation" class="@(ViewBag.sort == newestSortText ? "active" : "")">
                                <a role="menuitem" tabindex="-1" href="@Url.Action("Index", sortNewestFilter)">Newest</a>
                            </li>
                            <li role="presentation" class="@(ViewBag.sort == oldestSortText ? "active" : "")">
                                <a role="menuitem" tabindex="-1" href="@Url.Action("Index", sortOldestFilter)">Oldest</a>
                            </li>
                            <li role="presentation" class="@(ViewBag.sort == mostCommentedSortText ? "active" : "")">
                                <a role="menuitem" tabindex="-1" href="@Url.Action("Index", sortMostCommentedFilter)">Most Commented</a>
                            </li>
                            <li role="presentation" class="@(ViewBag.sort == leastCommentedSortText ? "active" : "")">
                                <a role="menuitem" tabindex="-1" href="@Url.Action("Index", sortLeastCommentedFilter)">Least Commented</a>
                            </li>
                            <li role="presentation" class="@(ViewBag.sort == recentlyUpdatedSortText ? "active" : "")">
                                <a role="menuitem" tabindex="-1" href="@Url.Action("Index", sortRecentlyUpdatedFilter)">Recently Updated</a>
                            </li>
                            <li role="presentation" class="@(ViewBag.sort == leastRecentlyUpdatedSortText ? "active" : "")">
                                <a role="menuitem" tabindex="-1" href="@Url.Action("Index", sortLeastRecentlyUpdatedFilter)">Least Recently Updated</a>
                            </li>
                        </ul>
                    </div>
                </div>

                <div class="input-group">
                    <span class="input-group-addon" id="search-addon"><i class="fa fa-search"></i></span>
                    <input id="page" name="page" type="hidden" value="@ViewBag.Page.ToString()">
                    <input id="open" name="open" type="hidden" value="@ViewBag.Open.ToString()">
                    <input id="closed" name="closed" type="hidden" value="@ViewBag.Closed.ToString()">
                    <input id="sort" name="closed" type="hidden" value="@ViewBag.Sort.ToString()">
                    <input class="form-control" id="s" name="s" placeholder="Search" type="text" value="@ViewBag.CurrentFilter" aria-describedby="search-addon">
                </div>
            }
        </div>
    </div>
    <div class="row">
        <div class="col-sm-8">
            <div class="panel panel-default">
                <div class="panel-body">
                    @if (Model.Any())
                    {
                        <h5>
                            <i class="fa fa-exclamation-circle text-warning"></i> @ViewBag.OpenResultCount <small style="padding-right: 5px">Open</small>
                            <i class="fa fa-check-circle text-success"></i> @ViewBag.ClosedResultCount <small>Closed</small>
                        </h5>
                        <ul class="list-group">
                            @foreach (var w in Model)
                            {
                                var statuses = w.StatusChanges.OrderBy(o => o.ChangedOn);
                                var status = @statuses.Last().Status.Name;
                                var priorities = w.PriorityChanges.OrderBy(o => o.ChangedOn);
                                var priority = priorities.Last().Priority.Name;
                                var statusLabelColor = status == "On-Hold" ? "label-primary" : status == "Closed" ? "label-success" :
                                    status == "Under Review" || status == "In Progress" ? "label-warning" : "label-default";
                                var priorityLabelColor = priority == "Medium" ? "label-warning" : priority == "High" ? "label-danger" : "label-default";
                                var commentLabelColor = w.Comments.Any() ? "#31708f" : "";

                                <a href="@Url.Action("View", new {id = w.WorkOrderId})" class="list-group-item">

                                    <span class="badge" style="background-color: @commentLabelColor">
                                        <i class="fa fa-comment"></i>  @w.Comments.Count
                                    </span>
                                    <h4 class="list-group-item-heading">
                                        @w.Title
                                        <small>
                                            <span class="label @statusLabelColor" style="font-weight: normal !important; margin-right: 5px;">
                                                @status
                                            </span>
                                            <span class="label @priorityLabelColor" style="font-weight: normal !important;">
                                                @priority Priority
                                            </span>
                                        </small>
                                    </h4>
                                    <p class="list-group-item-text">
                                        <strong>#@w.WorkOrderId </strong>
                                        opened on <strong>@statuses.First().ChangedOn.ToShortDateString()</strong> by <strong>@statuses.First().Member</strong>
                                        @if (statuses.Last().Status.Name == "Closed")
                                        {
                                            @: and closed on <strong>@statuses.Last().ChangedOn.ToShortDateString()</strong> by <strong>@statuses.Last().Member </strong>
                                        }
                                    </p>
                                </a>
                            }
                        </ul>

                        if (ViewBag.ResultCount > ViewBag.PageSize)
                        {
                            <nav class="text-center">
                                <ul class="pagination">
                                    <li class="@(ViewBag.Page > 1 ? "" : "disabled")">
                                        @if (ViewBag.Page > 1)
                                        {
                                            <a href="@Url.Action("Index", pagePreviousFilter)" aria-label="Previous">
                                                <i class="fa fa-caret-left" aria-hidden="true"></i>
                                            </a>
                                        }
                                        else
                                        {
                                            <span><i class="fa fa-caret-left" aria-hidden="true"></i></span>
                                        }
                                    </li>
                                    @for (var i = 1; i <= ViewBag.Pages; i++)
                                    {
                                        var pageFilter = filter;
                                        pageFilter.page = i;
                                        
                                        <li class="@(ViewBag.Page == i ? "active": "")">
                                            <a href="@Url.Action("Index", pageFilter)">@i</a>
                                        </li>
                                    }
                                    <li class="@(ViewBag.Page < ViewBag.Pages ? "" : "disabled")">
                                        @if (ViewBag.Page < ViewBag.Pages)
                                        {
                                            <a href="@Url.Action("Index", pageNextFilter)" aria-label="Next">
                                                <i class="fa fa-caret-right" aria-hidden="true"></i>
                                            </a>
                                        }
                                        else
                                        {
                                            <span><i class="fa fa-caret-right" aria-hidden="true"></i></span>
                                        }
                                    </li>
                                </ul>
                            </nav>
                        }
                    }
                    else
                    {
                        <div class="alert alert-warning">
                            No work orders have been submitted yet.
                        </div>
                    }
                </div>
            </div>
            <div class="col-sm-4">

            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script>

    </script>
}
